[2023-09-26 10:09:24.236 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 10:09:24.439 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 10:09:24.441 +07:00[INF] Quartz Scheduler created
][2023-09-26 10:09:24.444 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 10:09:24.447 +07:00[INF] RAMJobStore initialized.
][2023-09-26 10:09:24.450 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 10:09:24.454 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 10:09:24.456 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 10:09:24.940 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 10:09:24.941 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 10:09:24.943 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 10:09:24.945 +07:00[INF] Hosting environment: "Development"
][2023-09-26 10:09:24.946 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 10:09:24.957 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 10:09:27.924 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 10:09:28.265 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:09:28.831 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 913.1247ms
][2023-09-26 10:09:28.908 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 10:09:28.918 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 9.6960ms
][2023-09-26 10:09:29.067 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 10:09:29.230 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 162.8296ms
][2023-09-26 10:09:31.009 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 10:09:31.299 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 290.0345ms
][2023-09-26 10:09:32.888 +07:00[INF] Executed DbCommand ("306"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:10:08.352 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 10:10:08.747 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 10:10:08.796 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 10:10:08.842 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:10:09.256 +07:00[INF] Executed DbCommand ("265"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 10:10:09.298 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 10:10:09.360 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 555.4377ms
][2023-09-26 10:10:09.362 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 10:10:09.375 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 1026.4143ms
][2023-09-26 10:10:52.780 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy20 - -
][2023-09-26 10:10:52.847 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 10:10:52.932 +07:00[INF] Route matched with "{action = \"GetOrders\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrders(Int32)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 10:10:53.198 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:10:53.540 +07:00[INF] Executed DbCommand ("251"ms) [Parameters=["@__id_0='?' (DbType = Int32)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id] AS [OrderId], [c].[customerName] AS [CustomerName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], [i0].[item_id] AS [ItemId], [i0].[itemName] AS [ItemName], [i].[Color], [o].[totalPrice] AS [TotalPrice], [i].[itemPrice] AS [ItemPrice], [o0].[quantity] AS [Quantity], [s].[shopName] AS [ShopName], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nINNER JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE [o].[order_id] = @__id_0"
][2023-09-26 10:10:53.547 +07:00[INF] Executing "OkObjectResult", writing value of type '"FinalApi.Dto.GetOrderRequest"'.
][2023-09-26 10:10:53.561 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)" in 628.9475ms
][2023-09-26 10:10:53.562 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 10:10:53.562 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy20 - - - 200 - application/json;+charset=utf-8 792.4923ms
][2023-09-26 10:11:29.614 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/orders/ao - -
][2023-09-26 10:11:29.642 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 10:11:29.653 +07:00[INF] Route matched with "{action = \"GetOrderByItemName\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrderByItemName(System.String)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 10:11:29.701 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:11:29.887 +07:00[INF] Executed DbCommand ("59"ms) [Parameters=["@__keyword_0='?' (Size = 255)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id], [o].[totalPrice], [o].[overDueDate], [o].[status], [c].[customerName], [i0].[itemName], [i].[Color], [i].[Quantity], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nLEFT JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE (@__keyword_0 LIKE N'') OR (CHARINDEX(@__keyword_0, [i0].[itemName]) > 0)"
][2023-09-26 10:11:29.888 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.OrderDto, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 10:11:29.893 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)" in 239.8482ms
][2023-09-26 10:11:29.893 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 10:11:29.893 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/orders/ao - - - 200 - application/json;+charset=utf-8 281.2401ms
][2023-09-26 10:11:39.273 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/orders/hodie - -
][2023-09-26 10:11:39.275 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 10:11:39.279 +07:00[INF] Route matched with "{action = \"GetOrderByItemName\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrderByItemName(System.String)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 10:11:39.286 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:11:39.320 +07:00[INF] Executed DbCommand ("10"ms) [Parameters=["@__keyword_0='?' (Size = 255)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id], [o].[totalPrice], [o].[overDueDate], [o].[status], [c].[customerName], [i0].[itemName], [i].[Color], [i].[Quantity], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nLEFT JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE (@__keyword_0 LIKE N'') OR (CHARINDEX(@__keyword_0, [i0].[itemName]) > 0)"
][2023-09-26 10:11:39.320 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.OrderDto, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 10:11:39.320 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)" in 40.5665ms
][2023-09-26 10:11:39.320 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 10:11:39.320 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/orders/hodie - - - 200 - application/json;+charset=utf-8 47.2820ms
][2023-09-26 10:11:45.723 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/orders/hoddie - -
][2023-09-26 10:11:45.724 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 10:11:45.724 +07:00[INF] Route matched with "{action = \"GetOrderByItemName\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrderByItemName(System.String)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 10:11:45.730 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:11:45.758 +07:00[INF] Executed DbCommand ("22"ms) [Parameters=["@__keyword_0='?' (Size = 255)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id], [o].[totalPrice], [o].[overDueDate], [o].[status], [c].[customerName], [i0].[itemName], [i].[Color], [i].[Quantity], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nLEFT JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE (@__keyword_0 LIKE N'') OR (CHARINDEX(@__keyword_0, [i0].[itemName]) > 0)"
][2023-09-26 10:11:45.758 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.OrderDto, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 10:11:45.760 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)" in 35.6412ms
][2023-09-26 10:11:45.760 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 10:11:45.760 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/orders/hoddie - - - 200 - application/json;+charset=utf-8 36.9116ms
][2023-09-26 10:11:53.637 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/orders/dai - -
][2023-09-26 10:11:53.638 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 10:11:53.638 +07:00[INF] Route matched with "{action = \"GetOrderByItemName\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrderByItemName(System.String)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 10:11:53.648 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:11:53.675 +07:00[INF] Executed DbCommand ("19"ms) [Parameters=["@__keyword_0='?' (Size = 255)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id], [o].[totalPrice], [o].[overDueDate], [o].[status], [c].[customerName], [i0].[itemName], [i].[Color], [i].[Quantity], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nLEFT JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE (@__keyword_0 LIKE N'') OR (CHARINDEX(@__keyword_0, [i0].[itemName]) > 0)"
][2023-09-26 10:11:53.675 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.OrderDto, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 10:11:53.676 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)" in 38.377ms
][2023-09-26 10:11:53.677 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 10:11:53.677 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/orders/dai - - - 200 - application/json;+charset=utf-8 39.5580ms
][2023-09-26 10:12:04.911 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/orders/hoodie - -
][2023-09-26 10:12:04.912 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 10:12:04.912 +07:00[INF] Route matched with "{action = \"GetOrderByItemName\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrderByItemName(System.String)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 10:12:04.920 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:12:04.942 +07:00[INF] Executed DbCommand ("18"ms) [Parameters=["@__keyword_0='?' (Size = 255)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id], [o].[totalPrice], [o].[overDueDate], [o].[status], [c].[customerName], [i0].[itemName], [i].[Color], [i].[Quantity], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nLEFT JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE (@__keyword_0 LIKE N'') OR (CHARINDEX(@__keyword_0, [i0].[itemName]) > 0)"
][2023-09-26 10:12:04.944 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.OrderDto, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 10:12:04.944 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)" in 32.315ms
][2023-09-26 10:12:04.944 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 10:12:04.945 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/orders/hoodie - - - 200 - application/json;+charset=utf-8 33.6811ms
][2023-09-26 10:12:09.823 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/orders/hoodi - -
][2023-09-26 10:12:09.824 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 10:12:09.824 +07:00[INF] Route matched with "{action = \"GetOrderByItemName\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrderByItemName(System.String)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 10:12:09.829 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:12:09.861 +07:00[INF] Executed DbCommand ("27"ms) [Parameters=["@__keyword_0='?' (Size = 255)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id], [o].[totalPrice], [o].[overDueDate], [o].[status], [c].[customerName], [i0].[itemName], [i].[Color], [i].[Quantity], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nLEFT JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE (@__keyword_0 LIKE N'') OR (CHARINDEX(@__keyword_0, [i0].[itemName]) > 0)"
][2023-09-26 10:12:09.862 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.OrderDto, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 10:12:09.862 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)" in 37.9248ms
][2023-09-26 10:12:09.862 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 10:12:09.862 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/orders/hoodi - - - 200 - application/json;+charset=utf-8 38.5993ms
][2023-09-26 10:12:16.757 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/orders/oo - -
][2023-09-26 10:12:16.757 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 10:12:16.757 +07:00[INF] Route matched with "{action = \"GetOrderByItemName\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrderByItemName(System.String)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 10:12:16.761 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:12:16.780 +07:00[INF] Executed DbCommand ("15"ms) [Parameters=["@__keyword_0='?' (Size = 255)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id], [o].[totalPrice], [o].[overDueDate], [o].[status], [c].[customerName], [i0].[itemName], [i].[Color], [i].[Quantity], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nLEFT JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE (@__keyword_0 LIKE N'') OR (CHARINDEX(@__keyword_0, [i0].[itemName]) > 0)"
][2023-09-26 10:12:16.780 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.OrderDto, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 10:12:16.781 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)" in 23.3071ms
][2023-09-26 10:12:16.781 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 10:12:16.781 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/orders/oo - - - 200 - application/json;+charset=utf-8 24.1031ms
][2023-09-26 10:12:20.448 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/orders/oo - -
][2023-09-26 10:12:20.449 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 10:12:20.449 +07:00[INF] Route matched with "{action = \"GetOrderByItemName\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrderByItemName(System.String)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 10:12:20.453 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:12:20.474 +07:00[INF] Executed DbCommand ("16"ms) [Parameters=["@__keyword_0='?' (Size = 255)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id], [o].[totalPrice], [o].[overDueDate], [o].[status], [c].[customerName], [i0].[itemName], [i].[Color], [i].[Quantity], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nLEFT JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE (@__keyword_0 LIKE N'') OR (CHARINDEX(@__keyword_0, [i0].[itemName]) > 0)"
][2023-09-26 10:12:20.474 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.OrderDto, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 10:12:20.475 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)" in 26.1935ms
][2023-09-26 10:12:20.475 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 10:12:20.476 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/orders/oo - - - 200 - application/json;+charset=utf-8 28.1315ms
][2023-09-26 10:22:12.702 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 10:22:12.915 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 10:22:12.917 +07:00[INF] Quartz Scheduler created
][2023-09-26 10:22:12.919 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 10:22:12.922 +07:00[INF] RAMJobStore initialized.
][2023-09-26 10:22:12.925 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 10:22:12.927 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 10:22:12.929 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 10:22:13.379 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 10:22:13.381 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 10:22:13.383 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 10:22:13.389 +07:00[INF] Hosting environment: "Development"
][2023-09-26 10:22:13.390 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 10:22:13.424 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 10:22:16.889 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 10:22:17.402 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 518.0050ms
][2023-09-26 10:22:17.424 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 10:22:17.431 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 6.9981ms
][2023-09-26 10:22:17.509 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 10:22:17.569 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 60.2644ms
][2023-09-26 10:22:17.640 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:22:17.640 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:22:17.828 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 10:22:18.291 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 463.1233ms
][2023-09-26 10:22:25.413 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:22:26.450 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:22:31.963 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:22:37.910 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:22:38.114 +07:00[INF] Executed DbCommand ("3,718"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:22:38.114 +07:00[INF] Executed DbCommand ("3,696"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:22:38.114 +07:00[INF] Executed DbCommand ("3,711"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:22:38.114 +07:00[INF] Executed DbCommand ("3,743"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:22:38.114 +07:00[INF] Executed DbCommand ("3,730"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:22:39.158 +07:00[INF] Executed DbCommand ("1,165"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:22:41.483 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:22:41.717 +07:00[INF] Executed DbCommand ("227"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:22:49.771 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:22:51.512 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:22:51.870 +07:00[INF] Executed DbCommand ("2,084"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:22:52.126 +07:00[INF] Executed DbCommand ("244"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:22:56.462 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:22:56.633 +07:00[INF] Executed DbCommand ("155"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:23:02.281 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:23:02.874 +07:00[INF] Executed DbCommand ("564"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:39:22.522 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 10:39:22.664 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 10:39:22.665 +07:00[INF] Quartz Scheduler created
][2023-09-26 10:39:22.667 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 10:39:22.669 +07:00[INF] RAMJobStore initialized.
][2023-09-26 10:39:22.672 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 10:39:22.673 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 10:39:22.675 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 10:39:23.063 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 10:39:23.064 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 10:39:23.066 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 10:39:23.068 +07:00[INF] Hosting environment: "Development"
][2023-09-26 10:39:23.069 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 10:39:23.080 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 10:39:25.118 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:39:25.755 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 10:39:28.458 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:39:29.041 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 3295.9503ms
][2023-09-26 10:39:29.056 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 10:39:29.066 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 10.7174ms
][2023-09-26 10:39:29.122 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 10:39:29.180 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 57.9168ms
][2023-09-26 10:39:29.339 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 10:39:29.534 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 194.6456ms
][2023-09-26 10:39:30.041 +07:00[INF] Executed DbCommand ("269"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:39:30.041 +07:00[INF] Executed DbCommand ("269"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:39:31.741 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:39:31.803 +07:00[INF] Executed DbCommand ("57"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:39:36.687 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:39:36.734 +07:00[INF] Executed DbCommand ("44"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:39:58.044 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 10:39:58.192 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 10:39:58.194 +07:00[INF] Quartz Scheduler created
][2023-09-26 10:39:58.196 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 10:39:58.198 +07:00[INF] RAMJobStore initialized.
][2023-09-26 10:39:58.200 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 10:39:58.201 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 10:39:58.203 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 10:39:58.596 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 10:39:58.597 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 10:39:58.599 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 10:39:58.605 +07:00[INF] Hosting environment: "Development"
][2023-09-26 10:39:58.606 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 10:39:58.616 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 10:40:01.619 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 10:40:01.744 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:40:02.148 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 538.2854ms
][2023-09-26 10:40:02.165 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 10:40:02.170 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 5.6588ms
][2023-09-26 10:40:02.202 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 10:40:02.238 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 35.7689ms
][2023-09-26 10:40:02.311 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:40:02.464 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 10:40:02.670 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 206.0176ms
][2023-09-26 10:40:04.705 +07:00[INF] Executed DbCommand ("309"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:40:04.705 +07:00[INF] Executed DbCommand ("309"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:40:07.361 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:40:07.416 +07:00[INF] Executed DbCommand ("51"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:42:53.935 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 10:42:54.079 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 10:42:54.080 +07:00[INF] Quartz Scheduler created
][2023-09-26 10:42:54.082 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 10:42:54.083 +07:00[INF] RAMJobStore initialized.
][2023-09-26 10:42:54.085 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 10:42:54.087 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 10:42:54.088 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 10:42:54.437 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 10:42:54.439 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 10:42:54.441 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 10:42:54.443 +07:00[INF] Hosting environment: "Development"
][2023-09-26 10:42:54.444 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 10:42:54.454 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 10:42:56.449 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:42:56.689 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 10:42:57.418 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 732.4260ms
][2023-09-26 10:42:57.440 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 10:42:57.445 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 5.7422ms
][2023-09-26 10:42:57.491 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 10:42:57.522 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 30.8670ms
][2023-09-26 10:42:57.986 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 10:42:58.197 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:42:58.241 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 255.5276ms
][2023-09-26 10:43:03.230 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:43:08.182 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:43:10.108 +07:00[INF] Executed DbCommand ("176"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:43:10.108 +07:00[INF] Executed DbCommand ("160"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:43:10.108 +07:00[INF] Executed DbCommand ("160"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:43:10.115 +07:00[INF] Executed DbCommand ("188"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:43:13.151 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:43:13.211 +07:00[INF] Executed DbCommand ("54"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:43:40.422 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 10:43:40.583 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 10:43:40.585 +07:00[INF] Quartz Scheduler created
][2023-09-26 10:43:40.589 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 10:43:40.591 +07:00[INF] RAMJobStore initialized.
][2023-09-26 10:43:40.594 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 10:43:40.595 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 10:43:40.597 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 10:43:40.985 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 10:43:40.987 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 10:43:40.989 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 10:43:40.990 +07:00[INF] Hosting environment: "Development"
][2023-09-26 10:43:40.992 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 10:43:41.002 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 10:43:44.869 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 10:43:45.248 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 384.1654ms
][2023-09-26 10:43:45.262 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 10:43:45.267 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 5.4331ms
][2023-09-26 10:43:45.309 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 10:43:45.515 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 205.9803ms
][2023-09-26 10:43:45.678 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 10:43:45.880 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 201.9308ms
][2023-09-26 10:43:47.053 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:43:49.041 +07:00[INF] Executed DbCommand ("266"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:43:50.560 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:43:50.626 +07:00[INF] Executed DbCommand ("59"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:43:55.767 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:43:55.828 +07:00[INF] Executed DbCommand ("58"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:44:00.567 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:44:00.613 +07:00[INF] Executed DbCommand ("44"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:44:05.562 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:44:05.601 +07:00[INF] Executed DbCommand ("36"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:44:10.572 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:44:10.633 +07:00[INF] Executed DbCommand ("58"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:44:15.573 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:44:15.632 +07:00[INF] Executed DbCommand ("54"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:44:20.571 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:44:20.636 +07:00[INF] Executed DbCommand ("63"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:52:30.528 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 10:52:30.744 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 10:52:30.777 +07:00[INF] Quartz Scheduler created
][2023-09-26 10:52:30.780 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 10:52:30.784 +07:00[INF] RAMJobStore initialized.
][2023-09-26 10:52:30.787 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 10:52:30.789 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 10:52:30.791 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 10:52:31.612 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 10:52:31.614 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 10:52:31.616 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 10:52:31.617 +07:00[INF] Hosting environment: "Development"
][2023-09-26 10:52:31.619 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 10:52:31.631 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 10:52:33.455 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 10:52:34.053 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 10:52:34.056 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 604.5402ms
][2023-09-26 10:52:34.059 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 6.2592ms
][2023-09-26 10:52:34.124 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 10:52:34.155 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 30.8314ms
][2023-09-26 10:52:34.490 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 10:52:34.765 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 274.4292ms
][2023-09-26 10:52:38.769 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:52:40.406 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:52:41.507 +07:00[INF] Executed DbCommand ("358"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:52:41.507 +07:00[INF] Executed DbCommand ("358"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:53:08.025 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 10:53:08.248 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 10:53:08.250 +07:00[INF] Quartz Scheduler created
][2023-09-26 10:53:08.253 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 10:53:08.256 +07:00[INF] RAMJobStore initialized.
][2023-09-26 10:53:08.259 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 10:53:08.262 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 10:53:08.265 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 10:53:09.119 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 10:53:09.121 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 10:53:09.123 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 10:53:09.125 +07:00[INF] Hosting environment: "Development"
][2023-09-26 10:53:09.127 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 10:53:09.144 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 10:53:11.723 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 10:53:11.930 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:53:12.179 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:53:12.352 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 10:53:12.352 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 633.4592ms
][2023-09-26 10:53:12.367 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 15.9604ms
][2023-09-26 10:53:12.406 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 10:53:12.456 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 50.2778ms
][2023-09-26 10:53:12.671 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 10:53:12.977 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 306.6205ms
][2023-09-26 10:53:14.811 +07:00[INF] Executed DbCommand ("287"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:53:14.811 +07:00[INF] Executed DbCommand ("287"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:53:17.217 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:53:17.263 +07:00[INF] Executed DbCommand ("41"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:53:22.166 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:53:22.233 +07:00[INF] Executed DbCommand ("62"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:53:26.820 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 10:53:26.848 +07:00[INF] Multiple candidate actions were found, but none matched the requested service API version '"2.0"'. Candidate actions: "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"
][2023-09-26 10:53:26.967 +07:00[INF] Executing endpoint '"Microsoft.AspNetCore.Http.Endpoint"'
][2023-09-26 10:53:26.982 +07:00[INF] Executing "ObjectResult", writing value of type '"<>f__AnonymousType0`1[[<>f__AnonymousType1`3[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"'.
][2023-09-26 10:53:26.991 +07:00[INF] Executed endpoint '"Microsoft.AspNetCore.Http.Endpoint"'
][2023-09-26 10:53:26.992 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 400 - application/json;+charset=utf-8 172.0122ms
][2023-09-26 10:53:27.167 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:53:27.220 +07:00[INF] Executed DbCommand ("50"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:53:32.160 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:53:32.191 +07:00[INF] Executed DbCommand ("27"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:54:03.791 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 10:54:04.114 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 10:54:04.117 +07:00[INF] Quartz Scheduler created
][2023-09-26 10:54:04.120 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 10:54:04.123 +07:00[INF] RAMJobStore initialized.
][2023-09-26 10:54:04.125 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 10:54:04.128 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 10:54:04.130 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 10:54:04.618 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 10:54:04.621 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 10:54:04.647 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 10:54:04.650 +07:00[INF] Hosting environment: "Development"
][2023-09-26 10:54:04.652 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 10:54:04.670 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 10:54:07.073 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 10:54:07.607 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 539.6909ms
][2023-09-26 10:54:07.626 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 10:54:07.631 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 5.3311ms
][2023-09-26 10:54:07.653 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 10:54:07.688 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 34.7718ms
][2023-09-26 10:54:07.866 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 10:54:08.142 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 277.0344ms
][2023-09-26 10:54:10.192 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:54:12.426 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:54:17.518 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:54:22.412 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:54:26.216 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 10:54:26.216 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 10:54:26.216 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 10:54:26.216 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 10:54:26.349 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11
][2023-09-26 10:54:26.349 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11
][2023-09-26 10:54:26.349 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11
][2023-09-26 10:54:26.349 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11
][2023-09-26 10:54:27.720 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:54:27.724 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 10:54:27.737 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11
][2023-09-26 10:54:27.809 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11
][2023-09-26 10:54:27.809 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11
][2023-09-26 10:54:27.811 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11
][2023-09-26 10:54:27.812 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11
][2023-09-26 10:54:27.813 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11
][2023-09-26 10:54:27.870 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11]
][2023-09-26 10:54:27.883 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11]
][2023-09-26 10:54:27.884 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11]
][2023-09-26 10:54:27.916 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11]
][2023-09-26 10:54:27.916 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=102; handshake=65; [Login] initialization=14; authentication=15; [Post-Login] complete=14032; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:42afcb07-35d6-4571-b1cc-b4f4de6172f8
Error Number:-2,State:0,Class:11]
][2023-09-26 10:55:38.179 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 10:55:38.351 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 10:55:38.352 +07:00[INF] Quartz Scheduler created
][2023-09-26 10:55:38.354 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 10:55:38.356 +07:00[INF] RAMJobStore initialized.
][2023-09-26 10:55:38.358 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 10:55:38.359 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 10:55:38.361 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 10:55:38.783 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 10:55:38.785 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 10:55:38.787 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 10:55:38.789 +07:00[INF] Hosting environment: "Development"
][2023-09-26 10:55:38.791 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 10:55:38.805 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 10:55:41.796 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 10:55:42.365 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 578.1027ms
][2023-09-26 10:55:42.392 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 10:55:42.404 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 11.5732ms
][2023-09-26 10:55:42.937 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 10:55:43.145 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:55:43.145 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:55:43.164 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 226.5862ms
][2023-09-26 10:55:43.317 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 10:55:43.497 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 180.1652ms
][2023-09-26 10:55:45.304 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:55:49.788 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:55:53.704 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 10:55:53.709 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 4.7913ms
][2023-09-26 10:55:54.258 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/favicon.ico - -
][2023-09-26 10:55:54.370 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/favicon.ico - - - 404 0 - 111.6049ms
][2023-09-26 10:55:54.799 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:55:59.423 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v2/swagger.json - -
][2023-09-26 10:55:59.432 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v2/swagger.json - - - 404 0 - 9.2026ms
][2023-09-26 10:55:59.793 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:56:00.337 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 10:56:00.337 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 10:56:00.337 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 10:56:00.337 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 10:56:00.337 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 10:56:00.337 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 10:56:00.507 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
][2023-09-26 10:56:00.507 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
][2023-09-26 10:56:00.507 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
][2023-09-26 10:56:00.507 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
][2023-09-26 10:56:00.516 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
][2023-09-26 10:56:00.517 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
][2023-09-26 10:56:02.825 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
][2023-09-26 10:56:02.825 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
][2023-09-26 10:56:02.825 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
][2023-09-26 10:56:02.832 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
][2023-09-26 10:56:02.833 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
][2023-09-26 10:56:02.835 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
][2023-09-26 10:56:02.880 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11]
][2023-09-26 10:56:02.880 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11]
][2023-09-26 10:56:02.883 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11]
][2023-09-26 10:56:02.880 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11]
][2023-09-26 10:56:02.888 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11]
][2023-09-26 10:56:02.889 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=104; handshake=52; [Login] initialization=9; authentication=11; [Post-Login] complete=14024; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 138
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:92450094-ea4b-4de0-a6c0-a714f30a5dcd
Error Number:-2,State:0,Class:11]
][2023-09-26 10:57:23.775 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 10:57:23.957 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 10:57:23.959 +07:00[INF] Quartz Scheduler created
][2023-09-26 10:57:23.961 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 10:57:23.963 +07:00[INF] RAMJobStore initialized.
][2023-09-26 10:57:23.965 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 10:57:23.967 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 10:57:23.968 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 10:57:24.311 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 10:57:24.313 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 10:57:24.315 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 10:57:24.317 +07:00[INF] Hosting environment: "Development"
][2023-09-26 10:57:24.318 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 10:57:24.328 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 10:57:25.839 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 10:57:26.479 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 650.8927ms
][2023-09-26 10:57:26.498 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 10:57:26.505 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 6.8749ms
][2023-09-26 10:57:26.583 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 10:57:26.640 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 57.3896ms
][2023-09-26 10:57:26.803 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 10:57:27.053 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 249.6662ms
][2023-09-26 10:57:27.069 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:57:27.240 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:57:29.232 +07:00[INF] Executed DbCommand ("214"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:57:29.232 +07:00[INF] Executed DbCommand ("254"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:57:32.307 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:57:32.376 +07:00[INF] Executed DbCommand ("64"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:57:37.243 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:57:37.278 +07:00[INF] Executed DbCommand ("33"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:58:13.694 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 10:58:17.247 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 10:58:17.249 +07:00[INF] Quartz Scheduler created
][2023-09-26 10:58:17.251 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 10:58:17.253 +07:00[INF] RAMJobStore initialized.
][2023-09-26 10:58:17.255 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 10:58:17.257 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 10:58:17.259 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 10:58:17.743 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 10:58:17.745 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 10:58:17.747 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 10:58:17.748 +07:00[INF] Hosting environment: "Development"
][2023-09-26 10:58:17.750 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 10:58:17.764 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 10:58:20.967 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 10:58:22.005 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 10:58:22.019 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 11.3666ms
][2023-09-26 10:58:22.019 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 1068.4448ms
][2023-09-26 10:58:22.057 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 10:58:22.094 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 36.6711ms
][2023-09-26 10:58:22.360 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 10:58:22.654 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 293.8501ms
][2023-09-26 10:58:24.182 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:58:25.793 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:58:26.809 +07:00[INF] Executed DbCommand ("395"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:58:26.809 +07:00[INF] Executed DbCommand ("395"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:58:30.847 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:58:30.915 +07:00[INF] Executed DbCommand ("63"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:58:32.854 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 10:58:32.882 +07:00[INF] Multiple candidate actions were found, but none matched the requested service API version '"2.0"'. Candidate actions: "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"
][2023-09-26 10:58:32.980 +07:00[INF] Executing endpoint '"Microsoft.AspNetCore.Http.Endpoint"'
][2023-09-26 10:58:32.989 +07:00[INF] Executing "ObjectResult", writing value of type '"<>f__AnonymousType0`1[[<>f__AnonymousType1`3[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"'.
][2023-09-26 10:58:32.996 +07:00[INF] Executed endpoint '"Microsoft.AspNetCore.Http.Endpoint"'
][2023-09-26 10:58:32.996 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 400 - application/json;+charset=utf-8 142.6386ms
][2023-09-26 10:58:35.794 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:58:35.830 +07:00[INF] Executed DbCommand ("32"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:58:39.090 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 10:58:39.092 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 10:58:39.108 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 10:58:39.121 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:58:39.666 +07:00[INF] Executed DbCommand ("479"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 10:58:39.676 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 10:58:39.702 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 584.7843ms
][2023-09-26 10:58:39.703 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 10:58:39.709 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 619.1046ms
][2023-09-26 10:58:40.795 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:58:40.846 +07:00[INF] Executed DbCommand ("48"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:58:45.785 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 10:58:45.844 +07:00[INF] Executed DbCommand ("55"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 10:59:56.049 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 10:59:56.252 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 10:59:56.254 +07:00[INF] Quartz Scheduler created
][2023-09-26 10:59:56.257 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 10:59:56.260 +07:00[INF] RAMJobStore initialized.
][2023-09-26 10:59:56.263 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 10:59:56.265 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 10:59:56.267 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 10:59:56.658 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 10:59:56.660 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 10:59:56.662 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 10:59:56.667 +07:00[INF] Hosting environment: "Development"
][2023-09-26 10:59:56.669 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 10:59:56.678 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 11:00:00.212 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 11:00:01.185 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 984.1328ms
][2023-09-26 11:00:01.346 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 11:00:01.354 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 8.3530ms
][2023-09-26 11:00:01.372 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 11:00:01.458 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 86.0165ms
][2023-09-26 11:00:02.261 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 11:00:02.487 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 226.3284ms
][2023-09-26 11:00:03.146 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:00:22.146 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 11:00:22.417 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 11:00:22.421 +07:00[INF] Quartz Scheduler created
][2023-09-26 11:00:22.424 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 11:00:22.428 +07:00[INF] RAMJobStore initialized.
][2023-09-26 11:00:22.431 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 11:00:22.433 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 11:00:22.436 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 11:00:22.944 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 11:00:22.946 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 11:00:22.948 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 11:00:22.949 +07:00[INF] Hosting environment: "Development"
][2023-09-26 11:00:22.951 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 11:00:22.963 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 11:00:24.401 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 11:00:25.061 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 11:00:25.067 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 682.0535ms
][2023-09-26 11:00:25.068 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 6.8355ms
][2023-09-26 11:00:25.138 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 11:00:25.175 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 37.0333ms
][2023-09-26 11:00:25.397 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 11:00:25.786 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 388.6339ms
][2023-09-26 11:00:25.822 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:00:25.822 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:00:28.923 +07:00[INF] Executed DbCommand ("374"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:00:28.923 +07:00[INF] Executed DbCommand ("374"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:00:29.460 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:00:29.528 +07:00[INF] Executed DbCommand ("60"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:01:24.532 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 11:01:29.583 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 11:01:29.584 +07:00[INF] Quartz Scheduler created
][2023-09-26 11:01:29.588 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 11:01:29.589 +07:00[INF] RAMJobStore initialized.
][2023-09-26 11:01:29.591 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 11:01:29.593 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 11:01:29.594 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 11:01:29.997 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 11:01:30.000 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 11:01:30.002 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 11:01:30.007 +07:00[INF] Hosting environment: "Development"
][2023-09-26 11:01:30.008 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 11:01:30.017 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 11:01:32.140 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 11:01:32.837 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 11:01:32.842 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 705.5112ms
][2023-09-26 11:01:32.844 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 6.7650ms
][2023-09-26 11:01:32.901 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 11:01:32.989 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 87.3995ms
][2023-09-26 11:01:33.538 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 11:01:36.631 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 3093.3150ms
][2023-09-26 11:01:38.148 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:01:38.148 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:01:41.933 +07:00[INF] Executed DbCommand ("312"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:01:41.933 +07:00[INF] Executed DbCommand ("312"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:01:42.806 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:01:42.908 +07:00[INF] Executed DbCommand ("94"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:01:45.818 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v2/GetAllOrder - -
][2023-09-26 11:01:45.991 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V2.OrderController.GetOrder (FinalApi)"'
][2023-09-26 11:01:46.022 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Order\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V2.OrderController" ("FinalApi").
][2023-09-26 11:01:46.044 +07:00[INF] Executing "ObjectResult", writing value of type '"Microsoft.AspNetCore.Mvc.ProblemDetails"'.
][2023-09-26 11:01:46.062 +07:00[INF] Executed action "FinalApi.Controllers.V2.OrderController.GetOrder (FinalApi)" in 32.308ms
][2023-09-26 11:01:46.063 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V2.OrderController.GetOrder (FinalApi)"'
][2023-09-26 11:01:46.067 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v2/GetAllOrder - - - 403 - application/problem+json;+charset=utf-8 249.0660ms
][2023-09-26 11:01:47.716 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:01:47.797 +07:00[INF] Executed DbCommand ("79"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:01:52.723 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:01:52.937 +07:00[INF] Executed DbCommand ("211"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:01:59.513 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:01:59.551 +07:00[INF] Executed DbCommand ("36"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:02:02.717 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:02:02.767 +07:00[INF] Executed DbCommand ("48"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:02:07.716 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:02:07.753 +07:00[INF] Executed DbCommand ("34"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:02:15.627 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:02:15.690 +07:00[INF] Executed DbCommand ("59"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:02:17.714 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:02:17.772 +07:00[INF] Executed DbCommand ("54"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:02:20.731 +07:00[INF] Request starting HTTP/2 POST https://localhost:7080/api/v1/Login application/json 51
][2023-09-26 11:02:20.793 +07:00[INF] Multiple candidate actions were found, but none matched the requested service API version '"2.0"'. Candidate actions: "FinalApi.Controllers.V1.CustomerController.Login (FinalApi)"
][2023-09-26 11:02:20.804 +07:00[INF] Executing endpoint '"Microsoft.AspNetCore.Http.Endpoint"'
][2023-09-26 11:02:20.817 +07:00[INF] Executing "ObjectResult", writing value of type '"<>f__AnonymousType0`1[[<>f__AnonymousType1`3[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"'.
][2023-09-26 11:02:20.833 +07:00[INF] Executed endpoint '"Microsoft.AspNetCore.Http.Endpoint"'
][2023-09-26 11:02:20.833 +07:00[INF] Request finished HTTP/2 POST https://localhost:7080/api/v1/Login application/json 51 - 400 - application/json;+charset=utf-8 103.7401ms
][2023-09-26 11:02:22.725 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:02:22.796 +07:00[INF] Executed DbCommand ("66"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:02:27.711 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:02:27.759 +07:00[INF] Executed DbCommand ("45"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:02:32.713 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:02:32.763 +07:00[INF] Executed DbCommand ("45"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:03:02.643 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 11:03:02.946 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 11:03:02.948 +07:00[INF] Quartz Scheduler created
][2023-09-26 11:03:02.950 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 11:03:02.953 +07:00[INF] RAMJobStore initialized.
][2023-09-26 11:03:02.955 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 11:03:02.958 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 11:03:02.961 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 11:03:03.477 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 11:03:03.480 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 11:03:03.482 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 11:03:03.484 +07:00[INF] Hosting environment: "Development"
][2023-09-26 11:03:03.486 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 11:03:03.505 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 11:03:05.156 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 11:03:05.812 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 663.8743ms
][2023-09-26 11:03:05.838 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 11:03:05.849 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 11.3173ms
][2023-09-26 11:03:05.889 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 11:03:05.924 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 35.1773ms
][2023-09-26 11:03:06.113 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 11:03:06.420 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 306.9633ms
][2023-09-26 11:03:11.141 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:03:12.730 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:03:13.884 +07:00[INF] Executed DbCommand ("386"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:03:13.884 +07:00[INF] Executed DbCommand ("386"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:03:17.757 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:03:17.828 +07:00[INF] Executed DbCommand ("66"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:03:19.656 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v2/GetAllOrder - -
][2023-09-26 11:03:19.687 +07:00[INF] Multiple candidate actions were found, but none matched the requested service API version '"2.0"'. Candidate actions: "FinalApi.Controllers.V2.OrderController.GetOrder (FinalApi)\r\nFinalApi.Controllers.V2.OrderController.GetOrders (FinalApi)"
][2023-09-26 11:03:19.827 +07:00[INF] Executing endpoint '"Microsoft.AspNetCore.Http.Endpoint"'
][2023-09-26 11:03:19.841 +07:00[INF] Executing "ObjectResult", writing value of type '"<>f__AnonymousType0`1[[<>f__AnonymousType1`3[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"'.
][2023-09-26 11:03:19.851 +07:00[INF] Executed endpoint '"Microsoft.AspNetCore.Http.Endpoint"'
][2023-09-26 11:03:19.851 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v2/GetAllOrder - - - 400 - application/json;+charset=utf-8 195.6288ms
][2023-09-26 11:03:22.706 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:03:22.758 +07:00[INF] Executed DbCommand ("49"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:03:27.709 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:03:27.746 +07:00[INF] Executed DbCommand ("35"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:03:32.711 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:03:32.745 +07:00[INF] Executed DbCommand ("31"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:03:37.714 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:03:37.756 +07:00[INF] Executed DbCommand ("38"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:04:26.605 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 11:04:27.081 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 11:04:27.083 +07:00[INF] Quartz Scheduler created
][2023-09-26 11:04:27.085 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 11:04:27.088 +07:00[INF] RAMJobStore initialized.
][2023-09-26 11:04:27.090 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 11:04:27.093 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 11:04:27.095 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 11:04:29.262 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 11:04:29.265 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 11:04:29.267 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 11:04:29.274 +07:00[INF] Hosting environment: "Development"
][2023-09-26 11:04:29.276 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 11:04:29.291 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 11:04:30.576 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 11:04:31.423 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 850.5372ms
][2023-09-26 11:04:31.439 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 11:04:31.446 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 7.8391ms
][2023-09-26 11:04:31.533 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 11:04:31.571 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 38.2985ms
][2023-09-26 11:04:31.852 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 11:04:32.109 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:04:32.109 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:04:32.149 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 296.7328ms
][2023-09-26 11:04:34.587 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:04:36.294 +07:00[INF] Executed DbCommand ("292"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:04:36.294 +07:00[INF] Executed DbCommand ("292"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:04:36.294 +07:00[INF] Executed DbCommand ("292"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:04:39.366 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:04:39.421 +07:00[INF] Executed DbCommand ("52"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:05:14.558 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 11:05:14.781 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 11:05:14.812 +07:00[INF] Quartz Scheduler created
][2023-09-26 11:05:14.815 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 11:05:14.819 +07:00[INF] RAMJobStore initialized.
][2023-09-26 11:05:14.822 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 11:05:14.825 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 11:05:14.828 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 11:05:15.340 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 11:05:15.341 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 11:05:15.343 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 11:05:15.345 +07:00[INF] Hosting environment: "Development"
][2023-09-26 11:05:15.346 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 11:05:15.360 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 11:05:18.142 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 11:05:18.740 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 603.9163ms
][2023-09-26 11:05:18.742 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 11:05:18.756 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 13.1787ms
][2023-09-26 11:05:18.798 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 11:05:18.827 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 29.3925ms
][2023-09-26 11:05:18.979 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:05:18.979 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:05:18.985 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 11:05:19.210 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 224.5878ms
][2023-09-26 11:05:21.475 +07:00[INF] Executed DbCommand ("500"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:05:21.475 +07:00[INF] Executed DbCommand ("500"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:05:22.005 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:05:22.064 +07:00[INF] Executed DbCommand ("55"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:05:26.927 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:05:26.962 +07:00[INF] Executed DbCommand ("33"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:05:31.905 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:05:31.963 +07:00[INF] Executed DbCommand ("53"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:05:37.160 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:05:37.222 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 11:05:37.290 +07:00[INF] Executed DbCommand ("69"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:05:37.401 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 11:05:37.418 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 11:05:37.434 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:05:37.512 +07:00[INF] Executed DbCommand ("25"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 11:05:37.532 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 11:05:37.559 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 134.3186ms
][2023-09-26 11:05:37.560 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 11:05:37.566 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 344.8049ms
][2023-09-26 11:05:41.916 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:05:41.956 +07:00[INF] Executed DbCommand ("37"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:05:43.874 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 11:05:43.889 +07:00[INF] Multiple candidate actions were found, but none matched the requested service API version '"2.0"'. Candidate actions: "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"
][2023-09-26 11:05:43.891 +07:00[INF] Executing endpoint '"Microsoft.AspNetCore.Http.Endpoint"'
][2023-09-26 11:05:43.894 +07:00[INF] Executing "ObjectResult", writing value of type '"<>f__AnonymousType0`1[[<>f__AnonymousType1`3[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"'.
][2023-09-26 11:05:43.897 +07:00[INF] Executed endpoint '"Microsoft.AspNetCore.Http.Endpoint"'
][2023-09-26 11:05:43.898 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 400 - application/json;+charset=utf-8 23.3297ms
][2023-09-26 11:05:46.912 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:05:47.167 +07:00[INF] Executed DbCommand ("252"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:06:23.021 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 11:06:24.049 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 11:06:26.953 +07:00[INF] Quartz Scheduler created
][2023-09-26 11:06:26.956 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 11:06:26.958 +07:00[INF] RAMJobStore initialized.
][2023-09-26 11:06:26.963 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 11:06:26.972 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 11:06:26.977 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 11:06:27.503 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 11:06:27.505 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 11:06:27.508 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 11:06:27.510 +07:00[INF] Hosting environment: "Development"
][2023-09-26 11:06:27.512 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 11:06:27.527 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 11:06:30.550 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 11:06:31.070 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 523.2063ms
][2023-09-26 11:06:32.498 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 11:06:32.498 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 11:06:32.510 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 10.7071ms
][2023-09-26 11:06:32.529 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 31.1584ms
][2023-09-26 11:06:32.735 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 11:06:32.951 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 216.4822ms
][2023-09-26 11:06:33.415 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:06:35.569 +07:00[INF] Executed DbCommand ("319"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:06:36.613 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:06:36.701 +07:00[INF] Executed DbCommand ("74"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:06:41.657 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:06:41.910 +07:00[INF] Executed DbCommand ("250"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:06:44.654 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 11:06:44.696 +07:00[INF] Multiple candidate actions were found, but none matched the requested service API version '"2.0"'. Candidate actions: "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"
][2023-09-26 11:06:44.870 +07:00[INF] Executing endpoint '"Microsoft.AspNetCore.Http.Endpoint"'
][2023-09-26 11:06:44.884 +07:00[INF] Executing "ObjectResult", writing value of type '"<>f__AnonymousType0`1[[<>f__AnonymousType1`3[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"'.
][2023-09-26 11:06:44.892 +07:00[INF] Executed endpoint '"Microsoft.AspNetCore.Http.Endpoint"'
][2023-09-26 11:06:44.893 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 400 - application/json;+charset=utf-8 238.7133ms
][2023-09-26 11:06:46.603 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:06:46.642 +07:00[INF] Executed DbCommand ("36"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:06:49.459 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 11:06:49.462 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 11:06:49.479 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 11:06:49.497 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:06:49.579 +07:00[INF] Executed DbCommand ("28"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 11:06:49.588 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 11:06:49.607 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 121.7321ms
][2023-09-26 11:06:49.609 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 11:06:49.614 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 155.5514ms
][2023-09-26 11:06:51.616 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:06:51.666 +07:00[INF] Executed DbCommand ("47"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:23:33.403 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 11:23:33.596 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 11:23:33.598 +07:00[INF] Quartz Scheduler created
][2023-09-26 11:23:33.602 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 11:23:33.604 +07:00[INF] RAMJobStore initialized.
][2023-09-26 11:23:33.607 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 11:23:33.609 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 11:23:33.611 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 11:23:35.265 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 11:23:35.267 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 11:23:35.270 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 11:23:35.273 +07:00[INF] Hosting environment: "Development"
][2023-09-26 11:23:35.276 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 11:23:35.294 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 11:23:38.898 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 11:23:39.623 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 766.7008ms
][2023-09-26 11:23:39.641 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 11:23:39.648 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 7.3973ms
][2023-09-26 11:23:41.255 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 11:23:41.301 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 45.4907ms
][2023-09-26 11:23:41.384 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 11:23:41.504 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 120.3215ms
][2023-09-26 11:23:41.612 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:23:41.612 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:23:41.612 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:23:46.321 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:49:05.677 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 11:49:05.930 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 11:49:05.958 +07:00[INF] Quartz Scheduler created
][2023-09-26 11:49:05.961 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 11:49:05.965 +07:00[INF] RAMJobStore initialized.
][2023-09-26 11:49:05.969 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 11:49:05.974 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 11:49:05.976 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 11:49:06.483 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 11:49:06.485 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 11:49:06.487 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 11:49:06.495 +07:00[INF] Hosting environment: "Development"
][2023-09-26 11:49:06.497 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 11:49:06.539 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 11:49:09.515 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 11:49:10.180 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 669.2419ms
][2023-09-26 11:49:10.205 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 11:49:10.210 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 5.5688ms
][2023-09-26 11:49:10.241 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 11:49:10.311 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 70.6087ms
][2023-09-26 11:49:10.523 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 11:49:10.807 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 283.6330ms
][2023-09-26 11:49:13.381 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:49:15.151 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:49:16.004 +07:00[INF] Executed DbCommand ("306"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:49:16.004 +07:00[INF] Executed DbCommand ("306"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:51:39.948 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 11:51:40.233 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 11:51:40.236 +07:00[INF] Quartz Scheduler created
][2023-09-26 11:51:40.238 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 11:51:40.242 +07:00[INF] RAMJobStore initialized.
][2023-09-26 11:51:40.244 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 11:51:40.247 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 11:51:40.250 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 11:51:40.817 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 11:51:40.819 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 11:51:40.821 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 11:51:40.822 +07:00[INF] Hosting environment: "Development"
][2023-09-26 11:51:40.824 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 11:51:40.839 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 11:51:42.962 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 11:51:43.279 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:51:43.705 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 11:51:43.707 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 754.2006ms
][2023-09-26 11:51:43.745 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 39.7321ms
][2023-09-26 11:51:43.784 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 11:51:43.824 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 39.3928ms
][2023-09-26 11:51:43.868 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:52:38.949 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 11:52:42.000 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 11:52:42.002 +07:00[INF] Quartz Scheduler created
][2023-09-26 11:52:42.004 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 11:52:42.007 +07:00[INF] RAMJobStore initialized.
][2023-09-26 11:52:42.009 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 11:52:42.011 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 11:52:42.012 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 11:52:43.210 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 11:52:43.211 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 11:52:43.213 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 11:52:43.215 +07:00[INF] Hosting environment: "Development"
][2023-09-26 11:52:43.217 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 11:52:43.229 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 11:52:44.562 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 11:52:45.085 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 529.2170ms
][2023-09-26 11:52:45.103 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 11:52:45.103 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 11:52:45.111 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 8.3457ms
][2023-09-26 11:52:45.144 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 40.8577ms
][2023-09-26 11:52:45.272 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 11:52:45.505 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 233.0072ms
][2023-09-26 11:52:50.481 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:52:51.759 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:52:52.558 +07:00[INF] Executed DbCommand ("291"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:52:52.558 +07:00[INF] Executed DbCommand ("291"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:52:56.791 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:52:56.834 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 11:52:56.953 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 11:52:56.969 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 11:52:56.985 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:52:57.559 +07:00[INF] Executed DbCommand ("528"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 11:52:57.567 +07:00[INF] Executed DbCommand ("772"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:52:57.583 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 11:52:57.613 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 637.7321ms
][2023-09-26 11:52:57.614 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 11:52:57.621 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8;+x-api-version=2.0 786.4950ms
][2023-09-26 11:54:04.052 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 11:54:04.315 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 11:54:04.318 +07:00[INF] Quartz Scheduler created
][2023-09-26 11:54:04.320 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 11:54:04.323 +07:00[INF] RAMJobStore initialized.
][2023-09-26 11:54:04.325 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 11:54:04.328 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 11:54:04.330 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 11:54:04.872 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 11:54:04.874 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 11:54:04.875 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 11:54:04.877 +07:00[INF] Hosting environment: "Development"
][2023-09-26 11:54:04.878 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 11:54:04.890 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 11:54:08.444 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 11:54:09.130 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 691.3022ms
][2023-09-26 11:54:09.161 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 11:54:09.161 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 11:54:09.172 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 10.8979ms
][2023-09-26 11:54:09.305 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 143.9345ms
][2023-09-26 11:54:09.524 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 11:54:10.026 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 502.3576ms
][2023-09-26 11:54:11.394 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:54:11.394 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:54:13.121 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:54:13.920 +07:00[INF] Executed DbCommand ("333"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:54:13.920 +07:00[INF] Executed DbCommand ("333"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:54:13.920 +07:00[INF] Executed DbCommand ("333"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:54:18.020 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:54:18.080 +07:00[INF] Executed DbCommand ("53"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:55:03.679 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 11:55:03.927 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 11:55:03.929 +07:00[INF] Quartz Scheduler created
][2023-09-26 11:55:03.932 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 11:55:03.935 +07:00[INF] RAMJobStore initialized.
][2023-09-26 11:55:03.938 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 11:55:03.940 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 11:55:03.943 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 11:55:04.474 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 11:55:04.476 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 11:55:04.479 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 11:55:04.481 +07:00[INF] Hosting environment: "Development"
][2023-09-26 11:55:04.489 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 11:55:04.511 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 11:55:07.800 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 11:55:08.453 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 666.5124ms
][2023-09-26 11:55:08.478 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 11:55:08.478 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 11:55:08.491 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 12.7155ms
][2023-09-26 11:55:08.521 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 43.1877ms
][2023-09-26 11:55:08.641 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 11:55:08.870 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 228.2421ms
][2023-09-26 11:55:09.670 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:55:11.425 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:55:15.601 +07:00[INF] Executed DbCommand ("1,530"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:55:15.601 +07:00[INF] Executed DbCommand ("1,593"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:55:18.068 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:55:18.142 +07:00[INF] Executed DbCommand ("68"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:55:21.425 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:55:21.471 +07:00[INF] Executed DbCommand ("44"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:55:24.336 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 11:55:24.488 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 11:55:24.502 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 11:55:24.512 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:55:24.586 +07:00[INF] Executed DbCommand ("26"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 11:55:24.614 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 11:55:24.665 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 151.2449ms
][2023-09-26 11:55:24.667 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 11:55:24.674 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 337.9355ms
][2023-09-26 11:55:26.428 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:55:26.557 +07:00[INF] Executed DbCommand ("126"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:55:31.413 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:55:31.464 +07:00[INF] Executed DbCommand ("47"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 11:55:36.428 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 11:55:36.491 +07:00[INF] Executed DbCommand ("59"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:09:24.220 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 13:09:24.362 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 13:09:24.363 +07:00[INF] Quartz Scheduler created
][2023-09-26 13:09:24.365 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 13:09:24.367 +07:00[INF] RAMJobStore initialized.
][2023-09-26 13:09:24.369 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 13:09:24.370 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 13:09:24.372 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 13:09:24.746 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 13:09:24.747 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 13:09:24.749 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 13:09:24.755 +07:00[INF] Hosting environment: "Development"
][2023-09-26 13:09:24.756 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 13:09:24.767 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 13:09:30.012 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:09:30.012 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:09:30.583 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 13:09:31.590 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 1014.9086ms
][2023-09-26 13:09:31.617 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 13:09:31.627 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 10.3091ms
][2023-09-26 13:09:31.681 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 13:09:31.718 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 36.5093ms
][2023-09-26 13:09:31.961 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 13:09:32.303 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 341.7207ms
][2023-09-26 13:09:32.912 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:09:35.073 +07:00[INF] Executed DbCommand ("2,065"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:09:35.073 +07:00[INF] Executed DbCommand ("2,064"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:09:35.073 +07:00[INF] Executed DbCommand ("2,064"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:09:37.842 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:09:38.027 +07:00[INF] Executed DbCommand ("179"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:09:42.820 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:09:42.870 +07:00[INF] Executed DbCommand ("47"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:09:47.836 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:09:47.895 +07:00[INF] Executed DbCommand ("53"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:09:47.972 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 13:09:47.998 +07:00[INF] Request contained the service API version '"dsk"', which is not valid
][2023-09-26 13:09:48.159 +07:00[INF] Executing endpoint '"Microsoft.AspNetCore.Http.Endpoint"'
][2023-09-26 13:09:48.184 +07:00[INF] Executing "ObjectResult", writing value of type '"<>f__AnonymousType0`1[[<>f__AnonymousType1`3[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"'.
][2023-09-26 13:09:48.191 +07:00[INF] Executed endpoint '"Microsoft.AspNetCore.Http.Endpoint"'
][2023-09-26 13:09:48.191 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 400 - application/json;+charset=utf-8 218.8383ms
][2023-09-26 13:09:52.831 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:09:52.903 +07:00[INF] Executed DbCommand ("68"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:09:57.830 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:09:57.888 +07:00[INF] Executed DbCommand ("55"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:12:20.119 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 13:12:20.307 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 13:12:20.309 +07:00[INF] Quartz Scheduler created
][2023-09-26 13:12:20.322 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 13:12:20.325 +07:00[INF] RAMJobStore initialized.
][2023-09-26 13:12:20.328 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 13:12:20.330 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 13:12:20.333 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 13:12:20.946 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 13:12:20.947 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 13:12:20.949 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 13:12:20.951 +07:00[INF] Hosting environment: "Development"
][2023-09-26 13:12:20.952 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 13:12:20.963 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 13:12:24.900 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 13:12:25.479 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:12:25.479 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:12:25.542 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 645.2359ms
][2023-09-26 13:12:25.580 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 13:12:25.588 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 8.4030ms
][2023-09-26 13:12:25.598 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 13:12:25.628 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 30.6977ms
][2023-09-26 13:12:25.872 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 13:12:26.159 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 286.9755ms
][2023-09-26 13:12:27.854 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:12:29.254 +07:00[INF] Executed DbCommand ("267"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:12:29.254 +07:00[INF] Executed DbCommand ("267"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:12:29.254 +07:00[INF] Executed DbCommand ("267"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:12:33.898 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:12:33.982 +07:00[INF] Executed DbCommand ("79"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:12:37.796 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:12:37.836 +07:00[INF] Executed DbCommand ("37"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:12:42.794 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:12:42.845 +07:00[INF] Executed DbCommand ("48"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:12:47.803 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:12:47.857 +07:00[INF] Executed DbCommand ("52"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:12:52.807 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:12:52.846 +07:00[INF] Executed DbCommand ("36"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:12:56.750 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy11111 - -
][2023-09-26 13:12:56.919 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 13:12:56.961 +07:00[INF] Route matched with "{action = \"GetOrders\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrders(Int32)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 13:12:57.008 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:12:57.188 +07:00[INF] Executed DbCommand ("102"ms) [Parameters=["@__id_0='?' (DbType = Int32)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id] AS [OrderId], [c].[customerName] AS [CustomerName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], [i0].[item_id] AS [ItemId], [i0].[itemName] AS [ItemName], [i].[Color], [o].[totalPrice] AS [TotalPrice], [i].[itemPrice] AS [ItemPrice], [o0].[quantity] AS [Quantity], [s].[shopName] AS [ShopName], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nINNER JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE [o].[order_id] = @__id_0"
][2023-09-26 13:14:11.752 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 13:14:12.045 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 13:14:12.050 +07:00[INF] Quartz Scheduler created
][2023-09-26 13:14:12.056 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 13:14:12.059 +07:00[INF] RAMJobStore initialized.
][2023-09-26 13:14:12.064 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 13:14:12.068 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 13:14:12.072 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 13:14:12.738 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 13:14:12.740 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 13:14:12.743 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 13:14:12.745 +07:00[INF] Hosting environment: "Development"
][2023-09-26 13:14:12.747 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 13:14:12.764 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 13:14:15.967 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 13:14:16.744 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 786.4506ms
][2023-09-26 13:14:16.778 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 13:14:16.792 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 14.1021ms
][2023-09-26 13:14:16.873 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 13:14:16.916 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 42.7485ms
][2023-09-26 13:14:17.620 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 13:14:17.964 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 344.6320ms
][2023-09-26 13:14:20.262 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:14:21.946 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:14:22.856 +07:00[INF] Executed DbCommand ("277"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:14:22.856 +07:00[INF] Executed DbCommand ("277"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:14:26.859 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:14:26.907 +07:00[INF] Executed DbCommand ("42"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:14:31.810 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:14:31.875 +07:00[INF] Executed DbCommand ("62"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:14:36.817 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:14:36.891 +07:00[INF] Executed DbCommand ("69"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:14:41.815 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:14:41.864 +07:00[INF] Executed DbCommand ("45"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:14:42.383 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy11 - -
][2023-09-26 13:14:42.540 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 13:14:42.581 +07:00[INF] Route matched with "{action = \"GetOrders\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrders(Int32)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 13:14:42.634 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:14:42.847 +07:00[INF] Executed DbCommand ("130"ms) [Parameters=["@__id_0='?' (DbType = Int32)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id] AS [OrderId], [c].[customerName] AS [CustomerName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], [i0].[item_id] AS [ItemId], [i0].[itemName] AS [ItemName], [i].[Color], [o].[totalPrice] AS [TotalPrice], [i].[itemPrice] AS [ItemPrice], [o0].[quantity] AS [Quantity], [s].[shopName] AS [ShopName], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nINNER JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE [o].[order_id] = @__id_0"
][2023-09-26 13:23:48.442 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 13:23:48.752 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 13:23:48.755 +07:00[INF] Quartz Scheduler created
][2023-09-26 13:23:48.758 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 13:23:48.761 +07:00[INF] RAMJobStore initialized.
][2023-09-26 13:23:48.764 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 13:23:48.767 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 13:23:48.769 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 13:23:49.338 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 13:23:49.340 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 13:23:49.342 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 13:23:49.344 +07:00[INF] Hosting environment: "Development"
][2023-09-26 13:23:49.345 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 13:23:49.360 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 13:23:51.953 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 13:23:52.749 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 13:23:52.761 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 814.9020ms
][2023-09-26 13:23:52.761 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 10.8914ms
][2023-09-26 13:23:52.836 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 13:23:52.920 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 79.7654ms
][2023-09-26 13:23:53.185 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 13:23:53.520 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 334.6696ms
][2023-09-26 13:23:56.096 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:23:56.709 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:23:59.845 +07:00[INF] Executed DbCommand ("513"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:23:59.845 +07:00[INF] Executed DbCommand ("513"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:24:01.841 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:24:01.938 +07:00[INF] Executed DbCommand ("88"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:24:06.697 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:24:06.747 +07:00[INF] Executed DbCommand ("47"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:24:07.386 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy11 - -
][2023-09-26 13:24:07.541 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 13:24:07.595 +07:00[INF] Route matched with "{action = \"GetOrders\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrders(Int32)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 13:24:07.653 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:24:07.825 +07:00[INF] Executed DbCommand ("96"ms) [Parameters=["@__id_0='?' (DbType = Int32)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id] AS [OrderId], [c].[customerName] AS [CustomerName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], [i0].[item_id] AS [ItemId], [i0].[itemName] AS [ItemName], [i].[Color], [o].[totalPrice] AS [TotalPrice], [i].[itemPrice] AS [ItemPrice], [o0].[quantity] AS [Quantity], [s].[shopName] AS [ShopName], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nINNER JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE [o].[order_id] = @__id_0"
][2023-09-26 13:24:08.138 +07:00[ERR] An error occurred while processing the request.
System.InvalidOperationException: Sequence contains no elements
   at System.Linq.ThrowHelper.ThrowNoElementsException()
   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)
   at FinalApi.Services.Impl.OrderServices.GetOrderById(Int32 id) in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 71
   at FinalApi.Controllers.V1.OrdersController.GetOrders(Int32 id) in D:\SWP-Project\FinalApi\Controllers\V1\OrdersController.cs:line 52
][2023-09-26 13:24:08.157 +07:00[INF] Executing "ObjectResult", writing value of type '"System.String"'.
][2023-09-26 13:24:08.170 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)" in 567.6527ms
][2023-09-26 13:24:08.172 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 13:24:08.181 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy11 - - - 500 - text/plain;+charset=utf-8 795.5452ms
][2023-09-26 13:24:11.697 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:24:11.764 +07:00[INF] Executed DbCommand ("64"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:32:15.475 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 13:32:15.977 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 13:32:16.009 +07:00[INF] Quartz Scheduler created
][2023-09-26 13:32:16.014 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 13:32:16.016 +07:00[INF] RAMJobStore initialized.
][2023-09-26 13:32:16.019 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 13:32:16.029 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 13:32:16.034 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 13:32:16.724 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 13:32:16.726 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 13:32:16.729 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 13:32:16.731 +07:00[INF] Hosting environment: "Development"
][2023-09-26 13:32:16.736 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 13:32:16.753 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 13:32:19.116 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 13:32:19.903 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:32:19.903 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:32:19.926 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 13:32:19.932 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 822.2392ms
][2023-09-26 13:32:19.934 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 7.4924ms
][2023-09-26 13:32:20.036 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 13:32:20.081 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 44.8941ms
][2023-09-26 13:32:20.313 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 13:32:20.615 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 302.9093ms
][2023-09-26 13:32:24.025 +07:00[INF] Executed DbCommand ("273"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:32:24.025 +07:00[INF] Executed DbCommand ("273"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:32:24.377 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:32:24.481 +07:00[INF] Executed DbCommand ("98"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:32:50.263 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 13:32:50.637 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 13:32:50.641 +07:00[INF] Quartz Scheduler created
][2023-09-26 13:32:50.654 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 13:32:50.661 +07:00[INF] RAMJobStore initialized.
][2023-09-26 13:32:50.690 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 13:32:50.697 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 13:32:50.705 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 13:32:53.187 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 13:32:53.190 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 13:32:53.199 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 13:32:53.204 +07:00[INF] Hosting environment: "Development"
][2023-09-26 13:32:53.207 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 13:32:53.244 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 13:32:55.007 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger - -
][2023-09-26 13:32:55.400 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger - - - 301 0 - 398.5232ms
][2023-09-26 13:32:55.420 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 13:32:55.871 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/swagger-ui.css - -
][2023-09-26 13:32:55.872 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/swagger-ui-bundle.js - -
][2023-09-26 13:32:55.872 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 13:32:55.872 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/swagger-ui-standalone-preset.js - -
][2023-09-26 13:32:55.872 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 13:32:55.893 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 21.3710ms
][2023-09-26 13:32:55.896 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 476.8220ms
][2023-09-26 13:32:55.965 +07:00[INF] Sending file. Request path: '"/swagger-ui.css"'. Physical path: '"N/A"'
][2023-09-26 13:32:55.966 +07:00[INF] Sending file. Request path: '"/swagger-ui-standalone-preset.js"'. Physical path: '"N/A"'
][2023-09-26 13:32:55.966 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/swagger-ui.css - - - 200 144929 text/css 95.0235ms
][2023-09-26 13:32:55.967 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/swagger-ui-standalone-preset.js - - - 200 312163 application/javascript 94.2296ms
][2023-09-26 13:32:55.974 +07:00[INF] Sending file. Request path: '"/swagger-ui-bundle.js"'. Physical path: '"N/A"'
][2023-09-26 13:32:55.974 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/swagger-ui-bundle.js - - - 200 1061536 application/javascript 102.5285ms
][2023-09-26 13:32:55.976 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 104.2761ms
][2023-09-26 13:32:56.343 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 13:32:56.383 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/favicon-32x32.png - -
][2023-09-26 13:32:56.384 +07:00[INF] Sending file. Request path: '"/favicon-32x32.png"'. Physical path: '"N/A"'
][2023-09-26 13:32:56.384 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/favicon-32x32.png - - - 200 628 image/png 0.6766ms
][2023-09-26 13:32:56.722 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 378.8097ms
][2023-09-26 13:32:59.676 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:33:01.515 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:33:03.270 +07:00[INF] Executed DbCommand ("306"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:33:03.270 +07:00[INF] Executed DbCommand ("306"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:33:07.022 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:33:07.708 +07:00[INF] Executed DbCommand ("680"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:33:11.986 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:33:12.042 +07:00[INF] Executed DbCommand ("53"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:33:15.654 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy5 - -
][2023-09-26 13:33:15.821 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 13:33:15.857 +07:00[INF] Route matched with "{action = \"GetOrders\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrders(Int32)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 13:33:15.904 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:33:16.053 +07:00[INF] Executed DbCommand ("91"ms) [Parameters=["@__id_0='?' (DbType = Int32)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id] AS [OrderId], [c].[customerName] AS [CustomerName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], [i0].[item_id] AS [ItemId], [i0].[itemName] AS [ItemName], [i].[Color], [o].[totalPrice] AS [TotalPrice], [i].[itemPrice] AS [ItemPrice], [o0].[quantity] AS [Quantity], [s].[shopName] AS [ShopName], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nINNER JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE [o].[order_id] = @__id_0"
][2023-09-26 13:33:16.367 +07:00[ERR] An error occurred while processing the request.
System.InvalidOperationException: Sequence contains no elements
   at System.Linq.ThrowHelper.ThrowNoElementsException()
   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)
   at FinalApi.Services.Impl.OrderServices.GetOrderById(Int32 id) in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 71
   at FinalApi.Controllers.V1.OrdersController.GetOrders(Int32 id) in D:\SWP-Project\FinalApi\Controllers\V1\OrdersController.cs:line 49
][2023-09-26 13:33:16.376 +07:00[INF] Executing "ObjectResult", writing value of type '"System.String"'.
][2023-09-26 13:33:16.392 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)" in 525.412ms
][2023-09-26 13:33:16.394 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 13:33:16.400 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy5 - - - 500 - text/plain;+charset=utf-8 746.0319ms
][2023-09-26 13:33:16.509 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:33:16.558 +07:00[INF] Executed DbCommand ("47"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:35:19.208 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 13:35:19.435 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 13:35:19.444 +07:00[INF] Quartz Scheduler created
][2023-09-26 13:35:19.447 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 13:35:19.449 +07:00[INF] RAMJobStore initialized.
][2023-09-26 13:35:19.451 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 13:35:19.453 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 13:35:19.455 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 13:35:19.920 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 13:35:19.921 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 13:35:19.923 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 13:35:19.925 +07:00[INF] Hosting environment: "Development"
][2023-09-26 13:35:19.926 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 13:35:19.937 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 13:35:22.766 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:35:23.171 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:35:23.218 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 13:35:24.751 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 1539.2054ms
][2023-09-26 13:35:25.050 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 13:35:25.050 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 13:35:25.060 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 10.1055ms
][2023-09-26 13:35:25.093 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 43.0668ms
][2023-09-26 13:35:25.930 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 13:35:27.813 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 1885.4771ms
][2023-09-26 13:35:28.214 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:35:28.497 +07:00[INF] Executed DbCommand ("239"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:35:28.497 +07:00[INF] Executed DbCommand ("339"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:35:28.497 +07:00[INF] Executed DbCommand ("339"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:35:33.155 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:35:33.219 +07:00[INF] Executed DbCommand ("60"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:35:38.163 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:35:38.763 +07:00[INF] Executed DbCommand ("596"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:35:39.857 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy122 - -
][2023-09-26 13:35:40.015 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 13:35:40.050 +07:00[INF] Route matched with "{action = \"GetOrders\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrders(Int32)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 13:35:40.088 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:35:40.298 +07:00[INF] Executed DbCommand ("135"ms) [Parameters=["@__id_0='?' (DbType = Int32)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id] AS [OrderId], [c].[customerName] AS [CustomerName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], [i0].[item_id] AS [ItemId], [i0].[itemName] AS [ItemName], [i].[Color], [o].[totalPrice] AS [TotalPrice], [i].[itemPrice] AS [ItemPrice], [o0].[quantity] AS [Quantity], [s].[shopName] AS [ShopName], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nINNER JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE [o].[order_id] = @__id_0"
][2023-09-26 13:35:40.325 +07:00[INF] Executing "ObjectResult", writing value of type '"Microsoft.AspNetCore.Mvc.ProblemDetails"'.
][2023-09-26 13:35:40.343 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)" in 284.8994ms
][2023-09-26 13:35:40.345 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 13:35:40.351 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy122 - - - 404 - application/problem+json;+charset=utf-8 493.8578ms
][2023-09-26 13:35:43.164 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:35:43.226 +07:00[INF] Executed DbCommand ("59"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:35:48.157 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:35:48.202 +07:00[INF] Executed DbCommand ("40"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:35:53.859 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:35:53.900 +07:00[INF] Executed DbCommand ("38"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:35:59.684 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:35:59.723 +07:00[INF] Executed DbCommand ("36"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:36:04.245 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:36:04.285 +07:00[INF] Executed DbCommand ("36"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:36:08.174 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:36:08.221 +07:00[INF] Executed DbCommand ("43"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:36:13.160 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:36:13.221 +07:00[INF] Executed DbCommand ("57"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:36:18.161 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:36:18.231 +07:00[INF] Executed DbCommand ("65"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:36:23.536 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:36:23.581 +07:00[INF] Executed DbCommand ("43"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:36:28.157 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:36:28.217 +07:00[INF] Executed DbCommand ("55"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:36:33.191 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:36:33.256 +07:00[INF] Executed DbCommand ("61"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:36:38.163 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:36:38.244 +07:00[INF] Executed DbCommand ("74"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:36:45.188 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:36:45.262 +07:00[INF] Executed DbCommand ("66"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:36:46.001 +07:00[INF] Request starting HTTP/2 POST https://localhost:7080/api/v1/Create-Order application/json 316
][2023-09-26 13:36:46.255 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)"'
][2023-09-26 13:36:46.294 +07:00[INF] Route matched with "{action = \"CreateOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult CreateOrder(FinalApi.Dto.CreateOrderRequest)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 13:36:46.494 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:36:55.820 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:36:55.842 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:36:55.846 +07:00[INF] Executed DbCommand ("8,639"ms) [Parameters=["@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 255) (DbType = AnsiString), @p3='?' (DbType = Date), @p4='?' (DbType = Date), @p5='?' (Size = 50) (DbType = AnsiString), @p6='?' (DbType = Double)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SET NOCOUNT ON;\r\nINSERT INTO [orders] ([address_id], [customer_id], [note], [orderDate], [overDueDate], [status], [totalPrice])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);\r\nSELECT [order_id]\r\nFROM [orders]\r\nWHERE @@ROWCOUNT = 1 AND [order_id] = scope_identity();"
][2023-09-26 13:36:59.198 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:36:59.905 +07:00[INF] Executed DbCommand ("3,928"ms) [Parameters=["@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SET NOCOUNT ON;\r\nINSERT INTO [orderdetails] ([discount], [itemDetailId], [order_id], [quantity])\r\nVALUES (@p0, @p1, @p2, @p3);\r\nSELECT [orderDetail_id]\r\nFROM [orderdetails]\r\nWHERE @@ROWCOUNT = 1 AND [orderDetail_id] = scope_identity();"
][2023-09-26 13:36:59.912 +07:00[INF] Executed DbCommand ("1"ms) [Parameters=["@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SET NOCOUNT ON;\r\nINSERT INTO [orderdetails] ([discount], [itemDetailId], [order_id], [quantity])\r\nVALUES (@p0, @p1, @p2, @p3);\r\nSELECT [orderDetail_id]\r\nFROM [orderdetails]\r\nWHERE @@ROWCOUNT = 1 AND [orderDetail_id] = scope_identity();"
][2023-09-26 13:36:59.945 +07:00[INF] Executed DbCommand ("4,097"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:36:59.952 +07:00[INF] Executed DbCommand ("4,104"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:37:00.156 +07:00[INF] Executing StatusCodeResult, setting HTTP status code 200
][2023-09-26 13:37:00.160 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)" in 13864.914ms
][2023-09-26 13:37:00.161 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)"'
][2023-09-26 13:37:00.165 +07:00[INF] Request finished HTTP/2 POST https://localhost:7080/api/v1/Create-Order application/json 316 - 200 0 - 14170.0398ms
][2023-09-26 13:37:00.249 +07:00[INF] Executed DbCommand ("281"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:37:03.197 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:37:03.347 +07:00[INF] Executed DbCommand ("137"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:37:08.172 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:37:08.251 +07:00[INF] Executed DbCommand ("64"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:37:13.155 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:37:13.780 +07:00[INF] Executed DbCommand ("623"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:37:18.163 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:37:18.239 +07:00[INF] Executed DbCommand ("72"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:37:23.156 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:37:23.220 +07:00[INF] Executed DbCommand ("59"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:37:28.188 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:37:28.253 +07:00[INF] Executed DbCommand ("60"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:37:33.158 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:37:33.211 +07:00[INF] Executed DbCommand ("48"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:37:38.160 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:37:38.202 +07:00[INF] Executed DbCommand ("36"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:37:38.701 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/orders/ao - -
][2023-09-26 13:37:38.757 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 13:37:38.787 +07:00[INF] Route matched with "{action = \"GetOrderByItemName\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrderByItemName(System.String)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 13:37:38.833 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:37:39.053 +07:00[INF] Executed DbCommand ("35"ms) [Parameters=["@__keyword_0='?' (Size = 255)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id], [o].[totalPrice], [o].[overDueDate], [o].[status], [c].[customerName], [i0].[itemName], [i].[Color], [i].[Quantity], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nLEFT JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE (@__keyword_0 LIKE N'') OR (CHARINDEX(@__keyword_0, [i0].[itemName]) > 0)"
][2023-09-26 13:37:39.085 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.OrderDto, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 13:37:39.119 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)" in 331.4576ms
][2023-09-26 13:37:39.119 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 13:37:39.120 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/orders/ao - - - 200 - application/json;+charset=utf-8 419.7770ms
][2023-09-26 13:37:43.171 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:37:43.217 +07:00[INF] Executed DbCommand ("42"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:37:45.101 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/orders/ai - -
][2023-09-26 13:37:45.103 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 13:37:45.108 +07:00[INF] Route matched with "{action = \"GetOrderByItemName\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrderByItemName(System.String)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 13:37:45.114 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:37:45.142 +07:00[INF] Executed DbCommand ("13"ms) [Parameters=["@__keyword_0='?' (Size = 255)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id], [o].[totalPrice], [o].[overDueDate], [o].[status], [c].[customerName], [i0].[itemName], [i].[Color], [i].[Quantity], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nLEFT JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE (@__keyword_0 LIKE N'') OR (CHARINDEX(@__keyword_0, [i0].[itemName]) > 0)"
][2023-09-26 13:37:45.143 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.OrderDto, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 13:37:45.144 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)" in 36.0482ms
][2023-09-26 13:37:45.144 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 13:37:45.145 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/orders/ai - - - 200 - application/json;+charset=utf-8 43.2883ms
][2023-09-26 13:37:48.159 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:37:48.206 +07:00[INF] Executed DbCommand ("42"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:57:49.601 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 13:57:49.847 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 13:57:49.848 +07:00[INF] Quartz Scheduler created
][2023-09-26 13:57:49.851 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 13:57:49.852 +07:00[INF] RAMJobStore initialized.
][2023-09-26 13:57:49.854 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 13:57:49.856 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 13:57:49.858 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 13:57:50.329 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 13:57:50.331 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 13:57:50.333 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 13:57:50.334 +07:00[INF] Hosting environment: "Development"
][2023-09-26 13:57:50.336 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 13:57:50.347 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 13:57:52.760 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 13:57:53.693 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 939.4556ms
][2023-09-26 13:57:53.745 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 13:57:53.755 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 9.6824ms
][2023-09-26 13:57:53.795 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 13:57:53.878 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 82.5519ms
][2023-09-26 13:57:54.192 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 13:57:54.503 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 310.1862ms
][2023-09-26 13:57:55.727 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:57:57.305 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:58:02.904 +07:00[INF] Executed DbCommand ("2,896"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:58:02.904 +07:00[INF] Executed DbCommand ("2,896"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:58:02.938 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:58:03.027 +07:00[INF] Executed DbCommand ("66"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:58:07.408 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:58:07.466 +07:00[INF] Executed DbCommand ("54"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 13:58:07.774 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 13:58:07.905 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 13:58:07.924 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 13:58:07.938 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:58:08.033 +07:00[INF] Executed DbCommand ("35"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 13:58:08.057 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 13:58:08.086 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 153.9374ms
][2023-09-26 13:58:08.087 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 13:58:08.093 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 319.4156ms
][2023-09-26 13:58:13.793 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 13:58:13.857 +07:00[INF] Executed DbCommand ("61"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:00:20.030 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:00:20.239 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:00:20.240 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:00:20.242 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:00:20.245 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:00:20.247 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:00:20.249 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:00:20.252 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:00:20.717 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:00:20.719 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:00:20.721 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:00:20.723 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:00:20.724 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:00:20.736 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:00:22.467 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:00:22.994 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 531.0507ms
][2023-09-26 14:00:23.020 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:00:23.027 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 6.4761ms
][2023-09-26 14:00:23.089 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:00:23.126 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:00:23.158 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 32.3511ms
][2023-09-26 14:00:23.670 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 14:00:23.877 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 207.2420ms
][2023-09-26 14:00:24.018 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:00:29.062 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:00:33.997 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:00:38.990 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:00:39.069 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 14:00:39.207 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 14:00:39.223 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 14:00:39.235 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:00:39.418 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 14:00:39.418 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 14:00:39.418 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 14:00:39.418 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 14:00:39.418 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 14:00:39.418 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 14:00:39.570 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()\r\nClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
][2023-09-26 14:00:39.571 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
][2023-09-26 14:00:39.571 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
][2023-09-26 14:00:39.571 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
][2023-09-26 14:00:39.571 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
][2023-09-26 14:00:39.571 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
][2023-09-26 14:00:40.190 +07:00[ERR] An error occurred while processing the request.
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at FinalApi.Services.Impl.OrderServices.GetOrders() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 19
   at FinalApi.Controllers.V1.OrdersController.GetOrder() in D:\SWP-Project\FinalApi\Controllers\V1\OrdersController.cs:line 36
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
][2023-09-26 14:00:40.206 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
][2023-09-26 14:00:40.210 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
][2023-09-26 14:00:40.211 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
][2023-09-26 14:00:40.212 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
][2023-09-26 14:00:40.214 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
][2023-09-26 14:00:40.214 +07:00[INF] Executing "ObjectResult", writing value of type '"System.String"'.
][2023-09-26 14:00:40.242 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11]
][2023-09-26 14:00:40.256 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11]
][2023-09-26 14:00:40.256 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11]
][2023-09-26 14:00:40.256 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11]
][2023-09-26 14:00:40.257 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 1003.6602ms
][2023-09-26 14:00:40.260 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11]
][2023-09-26 14:00:40.267 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 14:00:40.277 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 500 - text/plain;+charset=utf-8 1208.0196ms
][2023-09-26 14:00:43.990 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:00:43.994 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 14:00:44.002 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
][2023-09-26 14:00:44.041 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
][2023-09-26 14:00:44.053 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=82; handshake=50; [Login] initialization=10; authentication=8; [Post-Login] complete=14027; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 143
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:dfcf58a9-13d8-4c75-8072-25a3cbcbbd1a
Error Number:-2,State:0,Class:11]
][2023-09-26 14:00:46.729 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 14:00:46.731 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 14:00:46.732 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 14:00:46.737 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:00:48.987 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:00:54.848 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:01:19.953 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:01:20.195 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:01:20.198 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:01:20.200 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:01:20.203 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:01:20.205 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:01:20.207 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:01:20.210 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:01:20.699 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:01:20.700 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:01:20.702 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:01:20.704 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:01:20.705 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:01:20.720 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:01:23.684 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:01:24.424 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:01:24.424 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 742.9936ms
][2023-09-26 14:01:24.447 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 22.9283ms
][2023-09-26 14:01:24.449 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:01:24.449 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:01:24.552 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:01:24.606 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 53.4171ms
][2023-09-26 14:01:24.929 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 14:01:25.399 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 470.1746ms
][2023-09-26 14:01:28.801 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:01:28.844 +07:00[INF] Executed DbCommand ("420"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:01:28.844 +07:00[INF] Executed DbCommand ("420"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:01:28.912 +07:00[INF] Executed DbCommand ("91"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:01:33.698 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:01:33.779 +07:00[INF] Executed DbCommand ("72"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:01:33.863 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 14:01:34.036 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 14:01:34.059 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 14:01:34.077 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:01:34.190 +07:00[INF] Executed DbCommand ("44"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 14:01:34.231 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 14:01:34.276 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 203.4992ms
][2023-09-26 14:01:34.279 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 14:01:34.286 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 423.4936ms
][2023-09-26 14:01:39.436 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:01:39.768 +07:00[INF] Executed DbCommand ("330"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:01:43.699 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:01:43.742 +07:00[INF] Executed DbCommand ("40"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:01:48.308 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 14:01:48.314 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 5.6733ms
][2023-09-26 14:01:48.692 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:01:48.762 +07:00[INF] Executed DbCommand ("64"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:01:53.704 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:01:53.776 +07:00[INF] Executed DbCommand ("67"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:01:58.689 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:01:58.746 +07:00[INF] Executed DbCommand ("53"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:02:35.545 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:02:35.730 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:02:35.756 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:02:35.759 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:02:35.761 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:02:35.764 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:02:35.767 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:02:35.769 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:02:36.320 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:02:36.322 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:02:36.323 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:02:36.325 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:02:36.326 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:02:36.335 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:02:40.826 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:02:41.453 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 634.5833ms
][2023-09-26 14:02:41.468 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:02:41.475 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 6.9728ms
][2023-09-26 14:02:41.522 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:02:41.548 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 26.0015ms
][2023-09-26 14:02:41.748 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 14:02:41.881 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:02:41.881 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:02:41.963 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 215.6427ms
][2023-09-26 14:02:44.617 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:02:45.627 +07:00[INF] Executed DbCommand ("248"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:02:45.627 +07:00[INF] Executed DbCommand ("248"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:02:45.627 +07:00[INF] Executed DbCommand ("248"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:03:07.680 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:03:07.848 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:03:07.850 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:03:07.853 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:03:07.855 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:03:07.857 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:03:07.859 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:03:07.861 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:03:08.298 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:03:08.299 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:03:08.301 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:03:08.307 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:03:08.308 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:03:08.317 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:03:11.342 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:03:11.854 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 514.9087ms
][2023-09-26 14:03:11.873 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:03:11.879 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 5.7422ms
][2023-09-26 14:03:11.918 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:03:11.979 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:03:11.979 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:03:12.017 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 98.6199ms
][2023-09-26 14:03:12.394 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 14:03:12.592 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 197.8950ms
][2023-09-26 14:03:15.067 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:03:15.848 +07:00[INF] Executed DbCommand ("499"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:03:15.848 +07:00[INF] Executed DbCommand ("443"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:03:15.848 +07:00[INF] Executed DbCommand ("438"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:03:20.408 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:03:20.469 +07:00[INF] Executed DbCommand ("56"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:03:20.973 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 14:03:20.978 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 4.8582ms
][2023-09-26 14:03:24.944 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:03:24.989 +07:00[INF] Executed DbCommand ("40"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:03:29.948 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:03:30.114 +07:00[INF] Executed DbCommand ("163"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:03:34.950 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:03:34.992 +07:00[INF] Executed DbCommand ("40"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:03:41.792 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:03:41.835 +07:00[INF] Executed DbCommand ("41"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:03:44.936 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:03:45.030 +07:00[INF] Executed DbCommand ("91"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:03:50.552 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:03:50.609 +07:00[INF] Executed DbCommand ("54"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:04:12.339 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:04:12.610 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:04:12.612 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:04:12.615 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:04:12.618 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:04:12.620 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:04:12.622 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:04:12.624 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:04:13.092 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:04:13.094 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:04:13.095 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:04:13.097 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:04:13.098 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:04:13.111 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:04:17.835 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:04:18.620 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 788.2293ms
][2023-09-26 14:04:18.641 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:04:18.650 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 9.4811ms
][2023-09-26 14:04:18.731 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:04:21.415 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 2684.1981ms
][2023-09-26 14:04:21.510 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:04:21.510 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:04:21.510 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:04:21.525 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:04:21.526 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 1.5538ms
][2023-09-26 14:04:27.356 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:04:28.003 +07:00[INF] Executed DbCommand ("229"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:04:28.003 +07:00[INF] Executed DbCommand ("225"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:04:28.003 +07:00[INF] Executed DbCommand ("248"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:04:28.003 +07:00[INF] Executed DbCommand ("229"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:04:31.244 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:04:31.297 +07:00[INF] Executed DbCommand ("49"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:05:08.019 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:05:08.206 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:05:08.208 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:05:08.211 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:05:08.213 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:05:08.216 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:05:08.218 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:05:08.220 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:05:08.772 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:05:08.774 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:05:08.776 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:05:08.778 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:05:08.779 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:05:08.797 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:05:12.232 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:05:12.878 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 654.4076ms
][2023-09-26 14:05:12.904 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:05:12.910 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 6.4995ms
][2023-09-26 14:05:12.964 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:05:13.033 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 68.9547ms
][2023-09-26 14:05:13.327 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/index.html - -
][2023-09-26 14:05:13.540 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/index.html - - - 404 0 - 213.1113ms
][2023-09-26 14:05:19.298 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:05:19.298 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:05:19.298 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:05:19.583 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:05:40.599 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:05:40.866 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:05:40.868 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:05:40.870 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:05:40.873 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:05:40.875 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:05:40.877 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:05:40.882 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:05:41.385 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:05:41.387 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:05:41.389 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:05:41.391 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:05:41.393 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:05:41.405 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:05:42.869 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:05:43.422 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 561.8452ms
][2023-09-26 14:05:43.442 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:05:43.448 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 6.2718ms
][2023-09-26 14:05:43.509 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:05:43.555 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 46.2578ms
][2023-09-26 14:05:43.772 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:05:43.773 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 1.0715ms
][2023-09-26 14:05:44.368 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:05:44.368 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:05:47.230 +07:00[INF] Executed DbCommand ("201"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:05:47.230 +07:00[INF] Executed DbCommand ("201"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:05:47.600 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:05:47.659 +07:00[INF] Executed DbCommand ("54"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:05:52.545 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:05:52.625 +07:00[INF] Executed DbCommand ("77"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:05:57.541 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:05:57.575 +07:00[INF] Executed DbCommand ("33"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:06:02.549 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:06:02.605 +07:00[INF] Executed DbCommand ("53"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:06:07.538 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:06:07.594 +07:00[INF] Executed DbCommand ("53"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:06:12.557 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:06:12.611 +07:00[INF] Executed DbCommand ("50"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:06:17.546 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:06:17.595 +07:00[INF] Executed DbCommand ("46"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:06:22.550 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:06:22.586 +07:00[INF] Executed DbCommand ("34"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:06:31.161 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:06:31.225 +07:00[INF] Executed DbCommand ("58"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:06:32.570 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:06:32.704 +07:00[INF] Executed DbCommand ("127"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:06:37.549 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:06:37.590 +07:00[INF] Executed DbCommand ("36"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:06:55.454 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:06:56.285 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:06:56.287 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:06:56.290 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:06:56.292 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:06:56.294 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:06:56.297 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:06:56.298 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:06:56.702 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:06:56.704 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:06:56.707 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:06:56.709 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:06:56.710 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:06:56.722 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:07:00.793 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:07:00.793 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:07:01.160 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:07:01.887 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 734.1108ms
][2023-09-26 14:07:01.905 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:07:01.912 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 7.0896ms
][2023-09-26 14:07:01.951 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:07:02.042 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 90.2216ms
][2023-09-26 14:07:02.257 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:07:02.258 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 1.5426ms
][2023-09-26 14:07:03.798 +07:00[INF] Executed DbCommand ("314"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:07:03.798 +07:00[INF] Executed DbCommand ("314"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:07:04.464 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:07:04.522 +07:00[INF] Executed DbCommand ("50"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:07:09.385 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:07:09.444 +07:00[INF] Executed DbCommand ("54"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:07:31.739 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:07:31.963 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:07:31.965 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:07:31.968 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:07:31.970 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:07:31.973 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:07:31.975 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:07:31.976 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:07:32.531 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:07:32.534 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:07:32.536 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:07:32.538 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:07:32.541 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:07:32.557 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:07:34.831 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:07:35.493 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:07:35.497 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 671.1086ms
][2023-09-26 14:07:35.510 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 16.4360ms
][2023-09-26 14:07:35.596 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:07:35.635 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:07:35.655 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:07:35.657 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 60.6412ms
][2023-09-26 14:07:35.819 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:07:35.820 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 0.9151ms
][2023-09-26 14:07:38.559 +07:00[INF] Executed DbCommand ("432"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:07:38.559 +07:00[INF] Executed DbCommand ("432"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:08:37.168 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:08:37.364 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:08:37.367 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:08:37.370 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:08:37.373 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:08:37.377 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:08:37.379 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:08:37.382 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:08:37.872 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:08:37.874 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:08:37.876 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:08:37.879 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:08:37.881 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:08:37.892 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:08:40.025 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:08:40.932 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 912.7089ms
][2023-09-26 14:08:40.945 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:08:40.961 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 15.1940ms
][2023-09-26 14:08:41.051 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:08:41.095 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 44.2061ms
][2023-09-26 14:08:41.201 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:08:41.201 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:08:41.411 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/swagger.json - -
][2023-09-26 14:08:41.598 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/swagger.json - - - 404 0 - 187.5556ms
][2023-09-26 14:08:46.127 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:08:46.148 +07:00[INF] Executed DbCommand ("325"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:08:46.148 +07:00[INF] Executed DbCommand ("325"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:08:46.179 +07:00[INF] Executed DbCommand ("40"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:09:13.702 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:09:13.995 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:09:14.003 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:09:14.007 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:09:14.011 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:09:14.013 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:09:14.015 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:09:14.017 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:09:14.549 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:09:14.551 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:09:14.554 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:09:14.556 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:09:14.557 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:09:14.573 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:09:20.391 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:09:21.087 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 703.3125ms
][2023-09-26 14:09:21.108 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:09:21.113 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 4.9790ms
][2023-09-26 14:09:21.187 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:09:21.223 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 35.8795ms
][2023-09-26 14:09:21.408 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:09:21.409 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 1.0996ms
][2023-09-26 14:09:22.541 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:09:23.103 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:09:25.785 +07:00[INF] Executed DbCommand ("247"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:09:25.785 +07:00[INF] Executed DbCommand ("247"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:09:28.191 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:09:28.260 +07:00[INF] Executed DbCommand ("62"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:10:01.703 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:10:01.922 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:10:01.924 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:10:01.927 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:10:01.930 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:10:01.933 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:10:01.935 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:10:01.937 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:10:02.396 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:10:02.397 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:10:02.399 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:10:02.400 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:10:02.402 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:10:02.413 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:10:04.480 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:10:05.215 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 740.5928ms
][2023-09-26 14:10:05.216 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:10:05.260 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:10:05.261 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 44.4233ms
][2023-09-26 14:10:05.294 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 34.8001ms
][2023-09-26 14:10:05.531 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 14:10:05.702 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:10:05.706 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:10:05.882 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 351.0129ms
][2023-09-26 14:10:08.725 +07:00[INF] Executed DbCommand ("264"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:10:08.725 +07:00[INF] Executed DbCommand ("264"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:10:10.733 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:10:10.778 +07:00[INF] Executed DbCommand ("41"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:10:37.309 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:10:37.572 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:10:37.575 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:10:37.579 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:10:37.582 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:10:37.586 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:10:37.589 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:10:37.593 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:10:38.432 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:10:38.435 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:10:38.438 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:10:38.441 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:10:38.444 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:10:38.460 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:10:45.827 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:10:46.577 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 756.0751ms
][2023-09-26 14:10:46.604 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:10:46.614 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 9.6330ms
][2023-09-26 14:10:46.664 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:10:46.736 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 71.6391ms
][2023-09-26 14:10:47.016 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 14:10:47.374 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 357.7289ms
][2023-09-26 14:10:49.017 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:10:49.017 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:10:51.836 +07:00[INF] Executed DbCommand ("418"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:10:51.836 +07:00[INF] Executed DbCommand ("418"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:10:53.815 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:10:53.877 +07:00[INF] Executed DbCommand ("57"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:11:22.460 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:11:22.678 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:11:22.680 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:11:22.682 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:11:22.684 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:11:22.686 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:11:22.687 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:11:22.689 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:11:23.158 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:11:23.160 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:11:23.161 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:11:23.163 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:11:23.164 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:11:23.180 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:11:25.157 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:11:26.063 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 911.4952ms
][2023-09-26 14:11:26.083 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:11:26.089 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 5.7173ms
][2023-09-26 14:11:26.121 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:11:26.152 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 30.8132ms
][2023-09-26 14:11:26.321 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 14:11:26.562 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 240.9295ms
][2023-09-26 14:11:27.568 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:11:29.632 +07:00[INF] Executed DbCommand ("224"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:11:30.464 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:11:30.561 +07:00[INF] Executed DbCommand ("85"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:11:35.511 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:11:35.543 +07:00[INF] Executed DbCommand ("29"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:11:40.464 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:11:40.507 +07:00[INF] Executed DbCommand ("40"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:11:41.146 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 14:11:41.153 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 6.4150ms
][2023-09-26 14:11:45.464 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:11:45.517 +07:00[INF] Executed DbCommand ("51"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:11:50.461 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:11:50.510 +07:00[INF] Executed DbCommand ("46"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:11:55.459 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:11:55.492 +07:00[INF] Executed DbCommand ("31"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:14:16.286 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:14:16.451 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:14:16.452 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:14:16.454 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:14:16.456 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:14:16.459 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:14:16.460 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:14:16.462 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:14:17.084 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:14:17.116 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:14:17.119 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:14:17.121 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:14:17.122 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:14:17.132 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:14:21.722 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:14:21.722 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:14:22.706 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:14:23.580 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:14:23.587 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 896.8738ms
][2023-09-26 14:14:23.591 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 10.7913ms
][2023-09-26 14:14:25.721 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:14:25.809 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:14:25.896 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 174.7401ms
][2023-09-26 14:14:25.986 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 14:14:26.190 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 204.5406ms
][2023-09-26 14:14:27.042 +07:00[INF] Executed DbCommand ("272"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:14:27.042 +07:00[INF] Executed DbCommand ("272"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:14:27.042 +07:00[INF] Executed DbCommand ("272"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:14:30.297 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:14:30.357 +07:00[INF] Executed DbCommand ("56"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:14:35.287 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:14:35.324 +07:00[INF] Executed DbCommand ("34"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:14:36.015 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 14:14:36.206 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 14:14:36.222 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 14:14:36.237 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:14:36.308 +07:00[INF] Executed DbCommand ("26"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 14:14:36.333 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 14:14:36.361 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 131.3744ms
][2023-09-26 14:14:36.363 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 14:14:36.368 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 353.7510ms
][2023-09-26 14:14:40.286 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:14:40.325 +07:00[INF] Executed DbCommand ("37"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:14:45.288 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:14:45.342 +07:00[INF] Executed DbCommand ("51"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:17:00.264 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:17:00.494 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:17:00.496 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:17:00.498 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:17:00.500 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:17:00.503 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:17:00.505 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:17:00.507 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:17:00.898 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:17:00.900 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:17:00.902 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:17:00.903 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:17:00.905 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:17:00.917 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:17:07.196 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:17:07.899 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 709.4073ms
][2023-09-26 14:17:07.914 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:17:07.921 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 7.5404ms
][2023-09-26 14:17:07.939 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:17:07.939 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:17:07.939 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:17:08.007 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:17:08.073 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 65.3133ms
][2023-09-26 14:17:08.261 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 14:17:08.467 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 206.5345ms
][2023-09-26 14:17:11.973 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:17:13.310 +07:00[INF] Executed DbCommand ("292"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:17:13.310 +07:00[INF] Executed DbCommand ("292"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:17:13.310 +07:00[INF] Executed DbCommand ("292"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:17:13.310 +07:00[INF] Executed DbCommand ("289"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:17:19.562 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:17:19.619 +07:00[INF] Executed DbCommand ("51"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:17:21.032 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:17:21.071 +07:00[INF] Executed DbCommand ("36"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:17:26.030 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:17:26.142 +07:00[INF] Executed DbCommand ("110"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:17:26.377 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 14:17:26.516 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 14:17:26.542 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 14:17:26.558 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:17:26.626 +07:00[INF] Executed DbCommand ("22"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 14:17:26.650 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 14:17:26.690 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 136.772ms
][2023-09-26 14:17:26.692 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 14:17:26.703 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 326.7292ms
][2023-09-26 14:17:31.030 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:17:31.068 +07:00[INF] Executed DbCommand ("35"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:17:36.028 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:17:36.068 +07:00[INF] Executed DbCommand ("37"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:18:37.373 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:18:37.656 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:18:37.658 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:18:37.661 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:18:37.665 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:18:37.668 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:18:37.670 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:18:37.674 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:18:38.295 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:18:38.297 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:18:38.299 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:18:38.301 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:18:38.303 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:18:38.320 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:18:43.122 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:18:43.820 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:18:43.825 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 708.4535ms
][2023-09-26 14:18:43.853 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 33.1288ms
][2023-09-26 14:18:43.878 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:18:43.951 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 72.5991ms
][2023-09-26 14:18:44.109 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 14:18:44.426 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 317.6658ms
][2023-09-26 14:18:46.623 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:18:47.643 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:18:47.920 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 14:18:47.927 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 7.6857ms
][2023-09-26 14:18:50.049 +07:00[INF] Executed DbCommand ("424"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:18:50.049 +07:00[INF] Executed DbCommand ("424"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:18:52.713 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:18:53.346 +07:00[INF] Executed DbCommand ("628"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:18:57.636 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:18:57.684 +07:00[INF] Executed DbCommand ("45"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:19:02.639 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:19:02.673 +07:00[INF] Executed DbCommand ("32"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:19:07.636 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:19:07.674 +07:00[INF] Executed DbCommand ("36"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:19:12.634 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:19:12.675 +07:00[INF] Executed DbCommand ("38"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:19:17.630 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:19:17.671 +07:00[INF] Executed DbCommand ("38"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:19:22.209 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v2/swagger.json - -
][2023-09-26 14:19:22.212 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v2/swagger.json - - - 200 - application/json;charset=utf-8 2.8112ms
][2023-09-26 14:19:22.632 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:19:22.682 +07:00[INF] Executed DbCommand ("48"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:19:27.633 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:19:27.675 +07:00[INF] Executed DbCommand ("38"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:19:32.642 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:19:32.702 +07:00[INF] Executed DbCommand ("56"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:20:14.458 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 14:20:14.693 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 14:20:14.695 +07:00[INF] Quartz Scheduler created
][2023-09-26 14:20:14.697 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 14:20:14.699 +07:00[INF] RAMJobStore initialized.
][2023-09-26 14:20:14.701 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 14:20:14.703 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 14:20:14.704 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 14:20:15.185 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 14:20:15.187 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 14:20:15.189 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 14:20:15.191 +07:00[INF] Hosting environment: "Development"
][2023-09-26 14:20:15.194 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 14:20:15.206 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 14:20:16.923 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 14:20:21.628 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:20:21.628 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:20:22.119 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:20:22.475 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 5555.4319ms
][2023-09-26 14:20:22.595 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 14:20:22.597 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 14:20:22.645 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 48.0968ms
][2023-09-26 14:20:23.286 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 690.8156ms
][2023-09-26 14:20:23.562 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 14:20:23.767 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 204.9773ms
][2023-09-26 14:20:27.083 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:20:27.185 +07:00[INF] Executed DbCommand ("1,952"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:20:27.185 +07:00[INF] Executed DbCommand ("1,952"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:20:27.185 +07:00[INF] Executed DbCommand ("56"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:20:27.185 +07:00[INF] Executed DbCommand ("1,950"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:20:29.076 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v2/swagger.json - -
][2023-09-26 14:20:29.079 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v2/swagger.json - - - 200 - application/json;charset=utf-8 3.4514ms
][2023-09-26 14:20:31.786 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:20:31.841 +07:00[INF] Executed DbCommand ("52"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:20:36.795 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:20:36.857 +07:00[INF] Executed DbCommand ("60"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 14:20:40.572 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 14:20:40.574 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 2.3776ms
][2023-09-26 14:20:41.792 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 14:20:41.833 +07:00[INF] Executed DbCommand ("38"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:36:04.684 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 15:36:04.911 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 15:36:04.914 +07:00[INF] Quartz Scheduler created
][2023-09-26 15:36:04.917 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 15:36:04.920 +07:00[INF] RAMJobStore initialized.
][2023-09-26 15:36:04.923 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 15:36:04.925 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 15:36:04.927 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 15:36:05.382 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 15:36:05.384 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 15:36:05.386 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 15:36:05.388 +07:00[INF] Hosting environment: "Development"
][2023-09-26 15:36:05.389 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 15:36:05.402 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 15:36:07.172 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 15:36:08.410 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 1244.7775ms
][2023-09-26 15:36:08.426 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 15:36:08.430 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 4.4766ms
][2023-09-26 15:36:08.469 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 15:36:08.546 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 76.9525ms
][2023-09-26 15:36:08.698 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 15:36:08.892 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 193.8632ms
][2023-09-26 15:36:12.508 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:36:15.373 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:36:15.806 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v2/swagger.json - -
][2023-09-26 15:36:15.809 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v2/swagger.json - - - 200 - application/json;charset=utf-8 2.7397ms
][2023-09-26 15:36:20.399 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:36:23.309 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 15:36:23.438 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 15:36:23.451 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 15:36:23.463 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:36:25.323 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:36:28.307 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 15:36:28.307 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 15:36:28.307 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 15:36:28.307 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 15:36:28.307 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 15:36:29.373 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()\r\nClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11
][2023-09-26 15:36:29.374 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11
][2023-09-26 15:36:29.374 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11
][2023-09-26 15:36:29.374 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11
][2023-09-26 15:36:29.374 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()\r\n   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11
][2023-09-26 15:36:29.863 +07:00[ERR] An error occurred while processing the request.
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at FinalApi.Services.Impl.OrderServices.GetOrders() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 20
   at FinalApi.Controllers.V1.OrdersController.GetOrder() in D:\SWP-Project\FinalApi\Controllers\V1\OrdersController.cs:line 32
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11
][2023-09-26 15:36:29.882 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 144
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11
][2023-09-26 15:36:29.883 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 144
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11
][2023-09-26 15:36:29.883 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 144
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11
][2023-09-26 15:36:29.888 +07:00[INF] Executing "ObjectResult", writing value of type '"System.String"'.
][2023-09-26 15:36:29.890 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 144
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11
][2023-09-26 15:36:29.930 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 144
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 144
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11]
][2023-09-26 15:36:29.934 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 6444.6904ms
][2023-09-26 15:36:29.935 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 144
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 144
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11]
][2023-09-26 15:36:29.936 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 144
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 144
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11]
][2023-09-26 15:36:29.939 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 15:36:29.939 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 144
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 144
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11]
][2023-09-26 15:36:29.958 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 500 - text/plain;+charset=utf-8 6649.1467ms
][2023-09-26 15:36:30.308 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:36:30.312 +07:00[ERR] An error occurred using the connection to database '"projectDemo"' on server '"DESKTOP-TPS0JEE\\SQLEXPRESS"'.
][2023-09-26 15:36:30.333 +07:00[ERR] An exception occurred while iterating over the results of a query for context type '"FinalApi.Models.projectDemoContext"'."\r\n""Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; \r\n ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\nClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12\r\nError Number:-2,State:0,Class:11"
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11
][2023-09-26 15:36:30.385 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an unhandled Exception: 
Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 144
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11
][2023-09-26 15:36:30.399 +07:00[ERR] Job DEFAULT.CreateCustomerJob threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 144
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11
   --- End of inner exception stack trace --- [See nested exception: Microsoft.Data.SqlClient.SqlException (0x80131904): Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=112; handshake=59; [Login] initialization=15; authentication=12; [Post-Login] complete=14034; 
 ---> System.ComponentModel.Win32Exception (258): The wait operation timed out.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at FinalApi.Services.Impl.OrderServices.CreateCustomerVipAsync() in D:\SWP-Project\FinalApi\Services\Impl\OrderServices.cs:line 144
   at FinalApi.Jobs.CreateCustomerVipJob.Execute(IJobExecutionContext context) in D:\SWP-Project\FinalApi\Jobs\CreateCustomerJobs.cs:line 17
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
ClientConnectionId:985800b1-0e80-4c75-b091-b398e665ed12
Error Number:-2,State:0,Class:11]
][2023-09-26 15:36:35.316 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:36:38.854 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 15:36:38.856 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 15:36:38.856 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 15:36:38.859 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:36:40.316 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:36:45.324 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:36:46.812 +07:00[INF] Executed DbCommand ("202"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:36:46.812 +07:00[INF] Executed DbCommand ("207"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:36:46.812 +07:00[INF] Executed DbCommand ("205"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:36:46.812 +07:00[INF] Executed DbCommand ("205"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 15:36:46.858 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 15:36:46.878 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 8021.673ms
][2023-09-26 15:36:46.878 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 15:36:46.879 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 8025.2118ms
][2023-09-26 15:36:50.322 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:36:50.404 +07:00[INF] Executed DbCommand ("75"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:36:55.320 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:36:55.733 +07:00[INF] Executed DbCommand ("410"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:37:00.313 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:37:00.895 +07:00[INF] Executed DbCommand ("577"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:37:05.310 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:37:05.633 +07:00[INF] Executed DbCommand ("320"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:37:06.503 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy29 - -
][2023-09-26 15:37:06.506 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 15:37:06.524 +07:00[INF] Route matched with "{action = \"GetOrders\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrders(Int32)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 15:37:06.671 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:37:06.788 +07:00[INF] Executed DbCommand ("84"ms) [Parameters=["@__id_0='?' (DbType = Int32)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id] AS [OrderId], [c].[customerName] AS [CustomerName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], [i0].[item_id] AS [ItemId], [i0].[itemName] AS [ItemName], [i].[Color], [o].[totalPrice] AS [TotalPrice], [i].[itemPrice] AS [ItemPrice], [o0].[quantity] AS [Quantity], [s].[shopName] AS [ShopName], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nINNER JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE [o].[order_id] = @__id_0"
][2023-09-26 15:37:06.792 +07:00[INF] Executing "OkObjectResult", writing value of type '"FinalApi.Dto.GetOrderRequest"'.
][2023-09-26 15:37:06.794 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)" in 269.8168ms
][2023-09-26 15:37:06.794 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 15:37:06.794 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy29 - - - 200 - application/json;+charset=utf-8 291.0057ms
][2023-09-26 15:37:10.310 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:37:10.365 +07:00[INF] Executed DbCommand ("53"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:37:15.328 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:37:15.389 +07:00[INF] Executed DbCommand ("57"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:37:20.312 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:37:25.321 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:37:25.462 +07:00[INF] Executed DbCommand ("136"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:37:25.497 +07:00[INF] Executed DbCommand ("5,181"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:37:30.325 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:37:31.736 +07:00[INF] Executed DbCommand ("1,407"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:37:35.317 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:37:35.996 +07:00[INF] Executed DbCommand ("677"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:37:40.324 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:37:41.813 +07:00[INF] Executed DbCommand ("1,486"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:37:45.313 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:37:45.380 +07:00[INF] Executed DbCommand ("64"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:37:50.323 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:37:50.375 +07:00[INF] Executed DbCommand ("48"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:37:55.319 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:37:55.392 +07:00[INF] Executed DbCommand ("68"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:38:00.322 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:38:00.417 +07:00[INF] Executed DbCommand ("49"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:38:05.318 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:38:08.676 +07:00[INF] Executed DbCommand ("3,356"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:38:10.319 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:38:10.363 +07:00[INF] Executed DbCommand ("40"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:38:15.353 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:38:15.447 +07:00[INF] Executed DbCommand ("85"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:38:22.365 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:38:22.524 +07:00[INF] Executed DbCommand ("118"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:38:26.712 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:38:26.817 +07:00[INF] Executed DbCommand ("92"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:38:28.097 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 15:38:28.299 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 207.8532ms
][2023-09-26 15:38:30.333 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:38:30.414 +07:00[INF] Executed DbCommand ("75"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:38:35.311 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:38:35.373 +07:00[INF] Executed DbCommand ("59"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:38:38.534 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v2/GetAllOrder - -
][2023-09-26 15:38:38.559 +07:00[INF] Executing endpoint '"FinalApi.Controllers.OrderController.GetOrder (FinalApi)"'
][2023-09-26 15:38:38.589 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Order\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.OrderController" ("FinalApi").
][2023-09-26 15:38:38.633 +07:00[INF] Executing "ObjectResult", writing value of type '"Microsoft.AspNetCore.Mvc.ProblemDetails"'.
][2023-09-26 15:38:38.656 +07:00[INF] Executed action "FinalApi.Controllers.OrderController.GetOrder (FinalApi)" in 66.4525ms
][2023-09-26 15:38:38.656 +07:00[INF] Executed endpoint '"FinalApi.Controllers.OrderController.GetOrder (FinalApi)"'
][2023-09-26 15:38:38.656 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v2/GetAllOrder - - - 403 - application/problem+json;+charset=utf-8 151.2584ms
][2023-09-26 15:38:40.892 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:38:40.937 +07:00[INF] Executed DbCommand ("39"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:38:45.380 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:38:45.471 +07:00[INF] Executed DbCommand ("79"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:38:48.601 +07:00[INF] Request starting HTTP/1.1 GET https://localhost:7080/api/v2/GetAllOrder application/json 99
][2023-09-26 15:38:48.609 +07:00[INF] Executing endpoint '"FinalApi.Controllers.OrderController.GetOrder (FinalApi)"'
][2023-09-26 15:38:48.609 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Order\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.OrderController" ("FinalApi").
][2023-09-26 15:38:48.620 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:38:48.756 +07:00[INF] Executed DbCommand ("122"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 15:38:48.761 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 15:38:48.787 +07:00[INF] Executed action "FinalApi.Controllers.OrderController.GetOrder (FinalApi)" in 177.9327ms
][2023-09-26 15:38:48.787 +07:00[INF] Executed endpoint '"FinalApi.Controllers.OrderController.GetOrder (FinalApi)"'
][2023-09-26 15:38:48.788 +07:00[INF] Request finished HTTP/1.1 GET https://localhost:7080/api/v2/GetAllOrder application/json 99 - 200 - application/json;+charset=utf-8 187.5327ms
][2023-09-26 15:38:50.308 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:38:50.356 +07:00[INF] Executed DbCommand ("45"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:38:55.314 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:38:55.368 +07:00[INF] Executed DbCommand ("49"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:39:00.319 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:39:00.441 +07:00[INF] Executed DbCommand ("112"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:39:05.319 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:39:05.360 +07:00[INF] Executed DbCommand ("38"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:39:10.324 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:39:10.377 +07:00[INF] Executed DbCommand ("50"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:39:15.323 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:39:15.372 +07:00[INF] Executed DbCommand ("46"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:39:20.309 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:39:20.371 +07:00[INF] Executed DbCommand ("57"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:39:25.314 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:39:25.396 +07:00[INF] Executed DbCommand ("76"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:39:30.308 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:39:30.376 +07:00[INF] Executed DbCommand ("65"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:39:35.314 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:39:35.392 +07:00[INF] Executed DbCommand ("73"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:39:40.319 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:39:40.401 +07:00[INF] Executed DbCommand ("77"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:39:45.320 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:39:45.386 +07:00[INF] Executed DbCommand ("63"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:39:50.318 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:39:51.289 +07:00[INF] Executed DbCommand ("968"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:39:55.327 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:39:55.373 +07:00[INF] Executed DbCommand ("43"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:57:30.625 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 15:57:30.769 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 15:57:30.771 +07:00[INF] Quartz Scheduler created
][2023-09-26 15:57:30.773 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 15:57:30.775 +07:00[INF] RAMJobStore initialized.
][2023-09-26 15:57:30.776 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 15:57:30.778 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 15:57:30.780 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 15:57:31.127 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 15:57:31.128 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 15:57:31.130 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 15:57:31.131 +07:00[INF] Hosting environment: "Development"
][2023-09-26 15:57:31.132 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 15:57:31.142 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 15:57:32.271 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 15:57:32.652 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 384.8920ms
][2023-09-26 15:57:32.677 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 15:57:32.683 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 6.2829ms
][2023-09-26 15:57:32.742 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 15:57:32.770 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 28.6548ms
][2023-09-26 15:57:32.931 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:57:32.959 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 15:57:33.147 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 188.0676ms
][2023-09-26 15:57:34.128 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:57:36.275 +07:00[INF] Executed DbCommand ("1,090"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:57:36.275 +07:00[INF] Executed DbCommand ("1,074"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:57:38.891 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:57:38.986 +07:00[INF] Executed DbCommand ("84"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:57:43.774 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:57:43.840 +07:00[INF] Executed DbCommand ("61"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:57:44.923 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 15:57:45.161 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 15:57:45.190 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 15:57:45.216 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:57:45.321 +07:00[INF] Executed DbCommand ("33"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 15:57:45.360 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 15:57:45.411 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 207.0799ms
][2023-09-26 15:57:45.413 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 15:57:45.423 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 500.9894ms
][2023-09-26 15:57:48.779 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:57:48.857 +07:00[INF] Executed DbCommand ("73"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:57:53.773 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:57:53.849 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:57:58.778 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:57:58.835 +07:00[INF] Executed DbCommand ("52"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:58:03.778 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:58:03.843 +07:00[INF] Executed DbCommand ("63"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:58:08.775 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:58:08.854 +07:00[INF] Executed DbCommand ("75"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:58:13.773 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:58:13.854 +07:00[INF] Executed DbCommand ("78"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:58:18.776 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:58:18.874 +07:00[INF] Executed DbCommand ("93"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:58:23.776 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:58:23.850 +07:00[INF] Executed DbCommand ("70"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:58:27.014 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy24 - -
][2023-09-26 15:58:27.020 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 15:58:27.053 +07:00[INF] Route matched with "{action = \"GetOrders\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrders(Int32)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 15:58:27.121 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:58:27.321 +07:00[INF] Executed DbCommand ("133"ms) [Parameters=["@__id_0='?' (DbType = Int32)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id] AS [OrderId], [c].[customerName] AS [CustomerName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], [i0].[item_id] AS [ItemId], [i0].[itemName] AS [ItemName], [i].[Color], [o].[totalPrice] AS [TotalPrice], [i].[itemPrice] AS [ItemPrice], [o0].[quantity] AS [Quantity], [s].[shopName] AS [ShopName], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nINNER JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE [o].[order_id] = @__id_0"
][2023-09-26 15:58:27.329 +07:00[INF] Executing "OkObjectResult", writing value of type '"FinalApi.Dto.GetOrderRequest"'.
][2023-09-26 15:58:27.332 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)" in 278.823ms
][2023-09-26 15:58:27.332 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 15:58:27.333 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy24 - - - 200 - application/json;+charset=utf-8 319.0730ms
][2023-09-26 15:58:29.330 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:58:29.421 +07:00[INF] Executed DbCommand ("87"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:58:33.780 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:58:33.850 +07:00[INF] Executed DbCommand ("66"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:58:38.783 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:58:38.879 +07:00[INF] Executed DbCommand ("92"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:58:43.782 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:58:43.856 +07:00[INF] Executed DbCommand ("69"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:58:48.774 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:58:48.852 +07:00[INF] Executed DbCommand ("72"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:58:53.777 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:58:53.854 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:58:58.771 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:58:58.857 +07:00[INF] Executed DbCommand ("81"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:59:03.783 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:59:03.861 +07:00[INF] Executed DbCommand ("73"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:59:08.778 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:59:08.854 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:59:13.772 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:59:13.848 +07:00[INF] Executed DbCommand ("72"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:59:17.959 +07:00[INF] Request starting HTTP/2 POST https://localhost:7080/api/v1/Create-Order application/json 340
][2023-09-26 15:59:17.964 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)"'
][2023-09-26 15:59:17.968 +07:00[INF] Route matched with "{action = \"CreateOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult CreateOrder(FinalApi.Dto.CreateOrderRequest)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 15:59:18.061 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:59:18.645 +07:00[INF] Executed DbCommand ("67"ms) [Parameters=["@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 255) (DbType = AnsiString), @p3='?' (DbType = Date), @p4='?' (DbType = Date), @p5='?' (Size = 50) (DbType = AnsiString), @p6='?' (DbType = Double)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SET NOCOUNT ON;\r\nINSERT INTO [orders] ([address_id], [customer_id], [note], [orderDate], [overDueDate], [status], [totalPrice])\r\nVALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);\r\nSELECT [order_id]\r\nFROM [orders]\r\nWHERE @@ROWCOUNT = 1 AND [order_id] = scope_identity();"
][2023-09-26 15:59:18.762 +07:00[INF] Executed DbCommand ("7"ms) [Parameters=["@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SET NOCOUNT ON;\r\nINSERT INTO [orderdetails] ([discount], [itemDetailId], [order_id], [quantity])\r\nVALUES (@p0, @p1, @p2, @p3);\r\nSELECT [orderDetail_id]\r\nFROM [orderdetails]\r\nWHERE @@ROWCOUNT = 1 AND [orderDetail_id] = scope_identity();"
][2023-09-26 15:59:18.776 +07:00[INF] Executed DbCommand ("6"ms) [Parameters=["@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SET NOCOUNT ON;\r\nINSERT INTO [orderdetails] ([discount], [itemDetailId], [order_id], [quantity])\r\nVALUES (@p0, @p1, @p2, @p3);\r\nSELECT [orderDetail_id]\r\nFROM [orderdetails]\r\nWHERE @@ROWCOUNT = 1 AND [orderDetail_id] = scope_identity();"
][2023-09-26 15:59:18.784 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:59:18.797 +07:00[INF] Executed DbCommand ("7"ms) [Parameters=["@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SET NOCOUNT ON;\r\nINSERT INTO [orderdetails] ([discount], [itemDetailId], [order_id], [quantity])\r\nVALUES (@p0, @p1, @p2, @p3);\r\nSELECT [orderDetail_id]\r\nFROM [orderdetails]\r\nWHERE @@ROWCOUNT = 1 AND [orderDetail_id] = scope_identity();"
][2023-09-26 15:59:18.871 +07:00[INF] Executing StatusCodeResult, setting HTTP status code 200
][2023-09-26 15:59:18.871 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)" in 903.0533ms
][2023-09-26 15:59:18.871 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)"'
][2023-09-26 15:59:18.872 +07:00[INF] Request finished HTTP/2 POST https://localhost:7080/api/v1/Create-Order application/json 340 - 200 0 - 912.3852ms
][2023-09-26 15:59:18.888 +07:00[INF] Executed DbCommand ("99"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:59:23.771 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:59:23.852 +07:00[INF] Executed DbCommand ("76"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:59:27.517 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 15:59:27.518 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 15:59:27.519 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 15:59:27.524 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:59:27.583 +07:00[INF] Executed DbCommand ("16"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 15:59:27.584 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 15:59:27.584 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 65.2223ms
][2023-09-26 15:59:27.584 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 15:59:27.584 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 67.1976ms
][2023-09-26 15:59:28.781 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:59:28.874 +07:00[INF] Executed DbCommand ("89"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:59:33.783 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:59:33.862 +07:00[INF] Executed DbCommand ("73"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:59:38.361 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy31 - -
][2023-09-26 15:59:38.362 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 15:59:38.362 +07:00[INF] Route matched with "{action = \"GetOrders\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrders(Int32)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 15:59:38.368 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:59:38.392 +07:00[INF] Executed DbCommand ("18"ms) [Parameters=["@__id_0='?' (DbType = Int32)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id] AS [OrderId], [c].[customerName] AS [CustomerName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], [i0].[item_id] AS [ItemId], [i0].[itemName] AS [ItemName], [i].[Color], [o].[totalPrice] AS [TotalPrice], [i].[itemPrice] AS [ItemPrice], [o0].[quantity] AS [Quantity], [s].[shopName] AS [ShopName], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nINNER JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE [o].[order_id] = @__id_0"
][2023-09-26 15:59:38.392 +07:00[INF] Executing "OkObjectResult", writing value of type '"FinalApi.Dto.GetOrderRequest"'.
][2023-09-26 15:59:38.393 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)" in 30.7903ms
][2023-09-26 15:59:38.393 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 15:59:38.393 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy31 - - - 200 - application/json;+charset=utf-8 32.1377ms
][2023-09-26 15:59:38.783 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:59:38.886 +07:00[INF] Executed DbCommand ("97"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:59:43.777 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:59:43.871 +07:00[INF] Executed DbCommand ("88"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:59:48.781 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:59:48.856 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:59:53.784 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:59:53.896 +07:00[INF] Executed DbCommand ("106"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 15:59:58.783 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 15:59:58.860 +07:00[INF] Executed DbCommand ("73"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:00:03.775 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:00:03.843 +07:00[INF] Executed DbCommand ("62"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:00:08.774 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:00:08.869 +07:00[INF] Executed DbCommand ("90"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:00:13.780 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:00:13.850 +07:00[INF] Executed DbCommand ("65"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:00:18.770 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:00:18.845 +07:00[INF] Executed DbCommand ("69"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:00:23.778 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:00:23.855 +07:00[INF] Executed DbCommand ("72"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:00:28.785 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:00:28.872 +07:00[INF] Executed DbCommand ("82"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:00:33.771 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:00:33.845 +07:00[INF] Executed DbCommand ("68"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:00:38.771 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:00:38.845 +07:00[INF] Executed DbCommand ("69"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:00:43.772 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:00:43.844 +07:00[INF] Executed DbCommand ("67"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:00:48.783 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:00:48.856 +07:00[INF] Executed DbCommand ("69"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:00:53.776 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:00:53.856 +07:00[INF] Executed DbCommand ("76"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:00:58.769 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:00:58.778 +07:00[INF] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:01:02.902 +07:00[INF] Request starting HTTP/2 DELETE https://localhost:7080/api/v1/DeleteItem-31,3 - -
][2023-09-26 16:01:02.902 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.DeleteItem (FinalApi)"'
][2023-09-26 16:01:02.906 +07:00[INF] Route matched with "{action = \"DeleteItem\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult DeleteItem(Int32, Int32)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 16:01:02.929 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:01:02.976 +07:00[INF] Executed DbCommand ("21"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id] AS [OrderId], [o0].[itemDetailId] AS [ItemDetailId], [c].[customerName] AS [CustomerName], [o].[totalPrice] AS [TotalPrice], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], [i0].[item_id] AS [ItemId], [i0].[itemName] AS [ItemName], [i].[Color], [i].[Quantity], [s].[shopName] AS [ShopName], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nINNER JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]"
][2023-09-26 16:01:03.012 +07:00[INF] Executed DbCommand ("7"ms) [Parameters=["@__idOrder_0='?' (DbType = Int32), @__idItem_1='?' (DbType = Int32)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT TOP(1) [o].[orderDetail_id], [o].[discount], [o].[itemDetailId], [o].[order_id], [o].[quantity]\r\nFROM [orderdetails] AS [o]\r\nWHERE ([o].[order_id] = @__idOrder_0) AND ([o].[itemDetailId] = @__idItem_1)"
][2023-09-26 16:01:03.062 +07:00[INF] Executed DbCommand ("7"ms) [Parameters=["@p0='?' (DbType = Int32)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SET NOCOUNT ON;\r\nDELETE FROM [orderdetails]\r\nWHERE [orderDetail_id] = @p0;\r\nSELECT @@ROWCOUNT;"
][2023-09-26 16:01:03.075 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.String"'.
][2023-09-26 16:01:03.076 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.DeleteItem (FinalApi)" in 169.7867ms
][2023-09-26 16:01:03.076 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.DeleteItem (FinalApi)"'
][2023-09-26 16:01:03.076 +07:00[INF] Request finished HTTP/2 DELETE https://localhost:7080/api/v1/DeleteItem-31,3 - - - 200 - text/plain;+charset=utf-8 174.6782ms
][2023-09-26 16:01:03.771 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:01:03.874 +07:00[INF] Executed DbCommand ("96"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:01:08.780 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:01:08.855 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:01:10.098 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy31 - -
][2023-09-26 16:01:10.098 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 16:01:10.098 +07:00[INF] Route matched with "{action = \"GetOrders\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrders(Int32)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 16:01:10.105 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:01:10.126 +07:00[INF] Executed DbCommand ("16"ms) [Parameters=["@__id_0='?' (DbType = Int32)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id] AS [OrderId], [c].[customerName] AS [CustomerName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], [i0].[item_id] AS [ItemId], [i0].[itemName] AS [ItemName], [i].[Color], [o].[totalPrice] AS [TotalPrice], [i].[itemPrice] AS [ItemPrice], [o0].[quantity] AS [Quantity], [s].[shopName] AS [ShopName], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nINNER JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE [o].[order_id] = @__id_0"
][2023-09-26 16:01:10.127 +07:00[INF] Executing "OkObjectResult", writing value of type '"FinalApi.Dto.GetOrderRequest"'.
][2023-09-26 16:01:10.127 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)" in 28.4203ms
][2023-09-26 16:01:10.127 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrders (FinalApi)"'
][2023-09-26 16:01:10.127 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/Get-OrderBy31 - - - 200 - application/json;+charset=utf-8 29.1610ms
][2023-09-26 16:01:13.783 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:01:13.862 +07:00[INF] Executed DbCommand ("74"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:01:18.785 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:01:18.869 +07:00[INF] Executed DbCommand ("78"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:01:20.227 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 16:01:20.227 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 16:01:20.228 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 16:01:20.233 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:01:20.253 +07:00[INF] Executed DbCommand ("14"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 16:01:20.254 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 16:01:20.254 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 26.8705ms
][2023-09-26 16:01:20.255 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 16:01:20.255 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 27.5355ms
][2023-09-26 16:01:23.788 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:01:23.866 +07:00[INF] Executed DbCommand ("73"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:01:28.785 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:01:28.862 +07:00[INF] Executed DbCommand ("72"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:01:33.773 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:01:33.848 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:01:38.781 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:01:38.856 +07:00[INF] Executed DbCommand ("70"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:01:39.995 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/orders/ao - -
][2023-09-26 16:01:39.996 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 16:01:39.998 +07:00[INF] Route matched with "{action = \"GetOrderByItemName\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrderByItemName(System.String)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 16:01:40.012 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:01:40.128 +07:00[INF] Executed DbCommand ("27"ms) [Parameters=["@__keyword_0='?' (Size = 255)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id], [o].[totalPrice], [o].[overDueDate], [o].[status], [c].[customerName], [i0].[itemName], [i].[Color], [i].[Quantity], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nLEFT JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE (@__keyword_0 LIKE N'') OR (CHARINDEX(@__keyword_0, [i0].[itemName]) > 0)"
][2023-09-26 16:01:40.129 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.OrderDto, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 16:01:40.134 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)" in 135.872ms
][2023-09-26 16:01:40.134 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 16:01:40.134 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/orders/ao - - - 200 - application/json;+charset=utf-8 139.5887ms
][2023-09-26 16:01:43.776 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:01:43.878 +07:00[INF] Executed DbCommand ("95"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:01:48.776 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:01:48.859 +07:00[INF] Executed DbCommand ("77"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:01:53.782 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:01:53.863 +07:00[INF] Executed DbCommand ("74"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:01:54.133 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/orders/ai - -
][2023-09-26 16:01:54.133 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 16:01:54.134 +07:00[INF] Route matched with "{action = \"GetOrderByItemName\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrderByItemName(System.String)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 16:01:54.140 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:01:54.160 +07:00[INF] Executed DbCommand ("12"ms) [Parameters=["@__keyword_0='?' (Size = 255)"], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o].[order_id], [o].[totalPrice], [o].[overDueDate], [o].[status], [c].[customerName], [i0].[itemName], [i].[Color], [i].[Quantity], [i].[Size]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [item] AS [i0] ON [i].[item_id] = [i0].[item_id]\r\nLEFT JOIN [customers] AS [c] ON [o].[customer_id] = [c].[customer_id]\r\nWHERE (@__keyword_0 LIKE N'') OR (CHARINDEX(@__keyword_0, [i0].[itemName]) > 0)"
][2023-09-26 16:01:54.160 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.OrderDto, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 16:01:54.162 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)" in 27.9785ms
][2023-09-26 16:01:54.162 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrderByItemName (FinalApi)"'
][2023-09-26 16:01:54.162 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/orders/ai - - - 200 - application/json;+charset=utf-8 29.0887ms
][2023-09-26 16:01:58.773 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:01:58.849 +07:00[INF] Executed DbCommand ("70"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:02:03.784 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:02:03.850 +07:00[INF] Executed DbCommand ("61"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:02:08.774 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:02:08.852 +07:00[INF] Executed DbCommand ("70"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:02:13.786 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:02:13.864 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:02:18.772 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:02:18.847 +07:00[INF] Executed DbCommand ("70"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:02:23.775 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:02:23.849 +07:00[INF] Executed DbCommand ("69"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:02:28.775 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:02:28.855 +07:00[INF] Executed DbCommand ("75"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:02:33.781 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:02:33.861 +07:00[INF] Executed DbCommand ("75"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:02:38.775 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:02:38.847 +07:00[INF] Executed DbCommand ("68"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:02:43.778 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:02:43.855 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:02:48.787 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:02:48.881 +07:00[INF] Executed DbCommand ("89"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:02:53.771 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:02:53.838 +07:00[INF] Executed DbCommand ("62"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:02:58.778 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:02:58.853 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:03:03.775 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:03:03.857 +07:00[INF] Executed DbCommand ("76"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:03:08.773 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:03:08.850 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:03:13.780 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:03:13.861 +07:00[INF] Executed DbCommand ("75"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:03:18.779 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:03:18.873 +07:00[INF] Executed DbCommand ("90"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:03:23.773 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:03:23.863 +07:00[INF] Executed DbCommand ("85"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:03:28.777 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:03:28.861 +07:00[INF] Executed DbCommand ("79"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:03:33.777 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:03:33.883 +07:00[INF] Executed DbCommand ("96"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:03:38.779 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:03:38.880 +07:00[INF] Executed DbCommand ("95"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:03:43.770 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:03:43.853 +07:00[INF] Executed DbCommand ("78"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:03:48.785 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:03:48.863 +07:00[INF] Executed DbCommand ("72"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:03:53.778 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:03:53.867 +07:00[INF] Executed DbCommand ("84"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:03:58.773 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:03:58.850 +07:00[INF] Executed DbCommand ("73"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:04:03.771 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:04:03.863 +07:00[INF] Executed DbCommand ("88"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:04:08.780 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:04:08.874 +07:00[INF] Executed DbCommand ("89"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:04:13.775 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:04:13.872 +07:00[INF] Executed DbCommand ("91"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:04:18.772 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:04:18.851 +07:00[INF] Executed DbCommand ("74"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:04:23.799 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:04:23.878 +07:00[INF] Executed DbCommand ("74"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:04:28.784 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:04:28.860 +07:00[INF] Executed DbCommand ("70"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:04:33.770 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:04:33.832 +07:00[INF] Executed DbCommand ("58"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:04:38.777 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:04:38.853 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:04:43.782 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:04:43.884 +07:00[INF] Executed DbCommand ("96"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:04:48.782 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:04:48.860 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:04:53.775 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:04:53.852 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:04:58.782 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:04:58.861 +07:00[INF] Executed DbCommand ("72"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:05:03.771 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:05:03.851 +07:00[INF] Executed DbCommand ("74"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:05:08.767 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:05:08.833 +07:00[INF] Executed DbCommand ("62"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:05:13.782 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:05:13.861 +07:00[INF] Executed DbCommand ("73"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:05:18.779 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:05:18.866 +07:00[INF] Executed DbCommand ("81"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:05:23.782 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:05:23.874 +07:00[INF] Executed DbCommand ("81"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:05:28.782 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:05:28.866 +07:00[INF] Executed DbCommand ("77"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:05:33.782 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:05:33.861 +07:00[INF] Executed DbCommand ("74"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:05:38.783 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:05:38.865 +07:00[INF] Executed DbCommand ("77"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:05:43.781 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:05:43.886 +07:00[INF] Executed DbCommand ("99"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:05:48.783 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:05:48.864 +07:00[INF] Executed DbCommand ("76"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:05:53.639 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v2/swagger.json - -
][2023-09-26 16:05:53.699 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v2/swagger.json - - - 200 - application/json;charset=utf-8 61.9129ms
][2023-09-26 16:05:53.782 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:05:53.881 +07:00[INF] Executed DbCommand ("94"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:05:58.774 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:05:58.859 +07:00[INF] Executed DbCommand ("81"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:06:03.776 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:06:03.839 +07:00[INF] Executed DbCommand ("58"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:06:08.779 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:06:08.854 +07:00[INF] Executed DbCommand ("68"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:06:10.046 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 16:06:10.064 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 17.4131ms
][2023-09-26 16:06:13.779 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:06:13.864 +07:00[INF] Executed DbCommand ("80"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:06:18.773 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:06:18.856 +07:00[INF] Executed DbCommand ("78"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:06:21.299 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v2/GetAllOrder - -
][2023-09-26 16:06:21.324 +07:00[INF] Executing endpoint '"FinalApi.Controllers.OrderController.GetOrder (FinalApi)"'
][2023-09-26 16:06:21.352 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Order\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.OrderController" ("FinalApi").
][2023-09-26 16:06:21.391 +07:00[INF] Executing "ObjectResult", writing value of type '"Microsoft.AspNetCore.Mvc.ProblemDetails"'.
][2023-09-26 16:06:21.419 +07:00[INF] Executed action "FinalApi.Controllers.OrderController.GetOrder (FinalApi)" in 66.3078ms
][2023-09-26 16:06:21.419 +07:00[INF] Executed endpoint '"FinalApi.Controllers.OrderController.GetOrder (FinalApi)"'
][2023-09-26 16:06:21.419 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v2/GetAllOrder - - - 403 - application/problem+json;+charset=utf-8 119.8867ms
][2023-09-26 16:06:23.775 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:06:23.855 +07:00[INF] Executed DbCommand ("74"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:06:28.642 +07:00[INF] Request starting HTTP/1.1 GET https://localhost:7080/api/v2/GetAllOrder application/json 99
][2023-09-26 16:06:28.650 +07:00[INF] Executing endpoint '"FinalApi.Controllers.OrderController.GetOrder (FinalApi)"'
][2023-09-26 16:06:28.650 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Order\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.OrderController" ("FinalApi").
][2023-09-26 16:06:28.658 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:06:28.690 +07:00[INF] Executed DbCommand ("21"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 16:06:28.692 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 16:06:28.729 +07:00[INF] Executed action "FinalApi.Controllers.OrderController.GetOrder (FinalApi)" in 78.8159ms
][2023-09-26 16:06:28.729 +07:00[INF] Executed endpoint '"FinalApi.Controllers.OrderController.GetOrder (FinalApi)"'
][2023-09-26 16:06:28.730 +07:00[INF] Request finished HTTP/1.1 GET https://localhost:7080/api/v2/GetAllOrder application/json 99 - 200 - application/json;+charset=utf-8 88.8438ms
][2023-09-26 16:06:28.783 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:06:28.889 +07:00[INF] Executed DbCommand ("98"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:06:33.773 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:06:33.857 +07:00[INF] Executed DbCommand ("69"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:06:38.778 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:06:38.876 +07:00[INF] Executed DbCommand ("93"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:06:42.771 +07:00[INF] Request starting HTTP/1.1 GET https://localhost:7080/api/v2/GetAllOrder application/json 99
][2023-09-26 16:06:42.772 +07:00[INF] Executing endpoint '"FinalApi.Controllers.OrderController.GetOrder (FinalApi)"'
][2023-09-26 16:06:42.776 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Order\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.OrderController" ("FinalApi").
][2023-09-26 16:06:42.777 +07:00[INF] Executing "ObjectResult", writing value of type '"Microsoft.AspNetCore.Mvc.ProblemDetails"'.
][2023-09-26 16:06:42.778 +07:00[INF] Executed action "FinalApi.Controllers.OrderController.GetOrder (FinalApi)" in 1.2676ms
][2023-09-26 16:06:42.778 +07:00[INF] Executed endpoint '"FinalApi.Controllers.OrderController.GetOrder (FinalApi)"'
][2023-09-26 16:06:42.778 +07:00[INF] Request finished HTTP/1.1 GET https://localhost:7080/api/v2/GetAllOrder application/json 99 - 403 - application/problem+json;+charset=utf-8 6.7083ms
][2023-09-26 16:06:43.774 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:06:43.851 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:06:48.778 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:06:48.853 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:08:25.805 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 16:08:25.953 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 16:08:25.955 +07:00[INF] Quartz Scheduler created
][2023-09-26 16:08:25.957 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 16:08:25.959 +07:00[INF] RAMJobStore initialized.
][2023-09-26 16:08:25.961 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 16:08:25.984 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 16:08:25.986 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 16:08:26.354 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 16:08:26.356 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 16:08:26.357 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 16:08:26.359 +07:00[INF] Hosting environment: "Development"
][2023-09-26 16:08:26.360 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 16:08:26.372 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 16:08:28.981 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 16:08:29.684 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 708.5038ms
][2023-09-26 16:08:29.712 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 16:08:29.719 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 7.0554ms
][2023-09-26 16:08:29.782 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 16:08:29.822 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 40.1763ms
][2023-09-26 16:08:30.065 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 16:08:30.070 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:08:30.070 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:08:30.403 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 338.4744ms
][2023-09-26 16:08:33.573 +07:00[INF] Executed DbCommand ("630"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:08:33.573 +07:00[INF] Executed DbCommand ("630"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:08:35.144 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:08:35.220 +07:00[INF] Executed DbCommand ("68"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:08:40.034 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:08:40.090 +07:00[INF] Executed DbCommand ("52"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:08:45.040 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:08:45.115 +07:00[INF] Executed DbCommand ("72"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:08:50.042 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:08:50.116 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:08:55.034 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:08:55.092 +07:00[INF] Executed DbCommand ("53"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:09:00.028 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:09:00.114 +07:00[INF] Executed DbCommand ("82"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:09:05.040 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:09:05.114 +07:00[INF] Executed DbCommand ("70"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:09:07.962 +07:00[INF] Request starting HTTP/2 POST https://localhost:7080/api/v2 application/json 239
][2023-09-26 16:09:08.194 +07:00[INF] Executing endpoint '"FinalApi.Controllers.OrderController.CreateOrder (FinalApi)"'
][2023-09-26 16:09:08.244 +07:00[INF] Route matched with "{action = \"CreateOrder\", controller = \"Order\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult CreateOrder(FinalApi.Dto.CreateOrderRequest)" on controller "FinalApi.Controllers.OrderController" ("FinalApi").
][2023-09-26 16:09:08.371 +07:00[INF] Executing "ObjectResult", writing value of type '"Microsoft.AspNetCore.Mvc.ProblemDetails"'.
][2023-09-26 16:09:08.394 +07:00[INF] Executed action "FinalApi.Controllers.OrderController.CreateOrder (FinalApi)" in 142.6999ms
][2023-09-26 16:09:08.395 +07:00[INF] Executed endpoint '"FinalApi.Controllers.OrderController.CreateOrder (FinalApi)"'
][2023-09-26 16:09:08.399 +07:00[INF] Request finished HTTP/2 POST https://localhost:7080/api/v2 application/json 239 - 403 - application/problem+json;+charset=utf-8 437.1051ms
][2023-09-26 16:09:10.033 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:09:10.114 +07:00[INF] Executed DbCommand ("75"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:09:15.032 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:09:15.113 +07:00[INF] Executed DbCommand ("74"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:09:20.030 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:09:20.148 +07:00[INF] Executed DbCommand ("113"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:09:22.589 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v2/GetAllOrder - -
][2023-09-26 16:09:22.595 +07:00[INF] Executing endpoint '"FinalApi.Controllers.OrderController.GetOrder (FinalApi)"'
][2023-09-26 16:09:22.598 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Order\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.OrderController" ("FinalApi").
][2023-09-26 16:09:22.625 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:09:22.763 +07:00[INF] Executed DbCommand ("36"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 16:09:22.784 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 16:09:22.807 +07:00[INF] Executed action "FinalApi.Controllers.OrderController.GetOrder (FinalApi)" in 208.6862ms
][2023-09-26 16:09:22.807 +07:00[INF] Executed endpoint '"FinalApi.Controllers.OrderController.GetOrder (FinalApi)"'
][2023-09-26 16:09:22.813 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v2/GetAllOrder - - - 200 - application/json;+charset=utf-8 223.6759ms
][2023-09-26 16:09:25.038 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:09:25.164 +07:00[INF] Executed DbCommand ("91"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:09:30.032 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:09:30.130 +07:00[INF] Executed DbCommand ("93"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:09:35.043 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:09:35.118 +07:00[INF] Executed DbCommand ("72"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:09:40.034 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:09:40.100 +07:00[INF] Executed DbCommand ("62"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:09:45.031 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:09:45.134 +07:00[INF] Executed DbCommand ("97"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:09:50.033 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:09:50.121 +07:00[INF] Executed DbCommand ("83"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:09:55.034 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:09:55.115 +07:00[INF] Executed DbCommand ("76"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:10:00.035 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:10:00.131 +07:00[INF] Executed DbCommand ("90"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:10:05.035 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:10:05.140 +07:00[INF] Executed DbCommand ("100"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:10:10.036 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:10:10.116 +07:00[INF] Executed DbCommand ("74"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:10:15.044 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:10:15.145 +07:00[INF] Executed DbCommand ("96"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:10:20.031 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:10:20.150 +07:00[INF] Executed DbCommand ("114"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:10:25.034 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:10:25.121 +07:00[INF] Executed DbCommand ("82"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:10:30.042 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:10:30.119 +07:00[INF] Executed DbCommand ("73"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:10:35.037 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:10:35.118 +07:00[INF] Executed DbCommand ("76"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:10:40.035 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:10:40.119 +07:00[INF] Executed DbCommand ("81"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:10:45.030 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:10:45.133 +07:00[INF] Executed DbCommand ("98"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:10:50.032 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:10:50.119 +07:00[INF] Executed DbCommand ("80"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:10:55.032 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:10:55.116 +07:00[INF] Executed DbCommand ("80"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:11:00.030 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:11:00.132 +07:00[INF] Executed DbCommand ("96"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:11:05.036 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:11:05.134 +07:00[INF] Executed DbCommand ("87"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:11:10.030 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:11:10.151 +07:00[INF] Executed DbCommand ("80"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:11:15.040 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:11:15.116 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:11:20.043 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:11:20.169 +07:00[INF] Executed DbCommand ("120"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:11:25.042 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:11:25.145 +07:00[INF] Executed DbCommand ("94"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:11:30.047 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:11:30.142 +07:00[INF] Executed DbCommand ("88"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:11:35.042 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:11:35.116 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:11:40.035 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:11:40.109 +07:00[INF] Executed DbCommand ("70"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:11:45.034 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:11:45.100 +07:00[INF] Executed DbCommand ("63"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:11:50.041 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:11:50.126 +07:00[INF] Executed DbCommand ("80"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:11:55.041 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:11:55.116 +07:00[INF] Executed DbCommand ("72"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:12:00.031 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:12:00.132 +07:00[INF] Executed DbCommand ("85"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:12:05.035 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:12:05.105 +07:00[INF] Executed DbCommand ("67"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:12:10.028 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:12:10.115 +07:00[INF] Executed DbCommand ("82"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:12:15.031 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:12:15.116 +07:00[INF] Executed DbCommand ("80"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:12:20.033 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:12:20.122 +07:00[INF] Executed DbCommand ("86"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:12:25.220 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:12:25.299 +07:00[INF] Executed DbCommand ("75"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:12:30.031 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:12:30.113 +07:00[INF] Executed DbCommand ("76"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:12:35.047 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:12:35.123 +07:00[INF] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:12:40.029 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:12:40.118 +07:00[INF] Executed DbCommand ("83"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:12:45.041 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:12:45.120 +07:00[INF] Executed DbCommand ("74"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:12:50.027 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:12:50.119 +07:00[INF] Executed DbCommand ("87"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:12:55.041 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:12:55.117 +07:00[INF] Executed DbCommand ("72"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:13:00.045 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:13:00.148 +07:00[INF] Executed DbCommand ("92"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:13:05.046 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:13:05.145 +07:00[INF] Executed DbCommand ("91"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:13:10.034 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:13:10.110 +07:00[INF] Executed DbCommand ("72"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:13:15.037 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:13:15.118 +07:00[INF] Executed DbCommand ("76"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:13:20.027 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:13:20.121 +07:00[INF] Executed DbCommand ("90"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:13:25.042 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:13:25.122 +07:00[INF] Executed DbCommand ("76"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:13:30.036 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:13:30.099 +07:00[INF] Executed DbCommand ("59"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:13:35.041 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:13:35.116 +07:00[INF] Executed DbCommand ("69"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:13:40.269 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:13:40.326 +07:00[INF] Executed DbCommand ("54"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:13:45.038 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:13:45.153 +07:00[INF] Executed DbCommand ("69"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 16:13:50.953 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 16:13:51.035 +07:00[INF] Executed DbCommand ("79"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:28:41.402 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 17:28:41.749 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 17:28:41.750 +07:00[INF] Quartz Scheduler created
][2023-09-26 17:28:41.756 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 17:28:41.758 +07:00[INF] RAMJobStore initialized.
][2023-09-26 17:28:41.761 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 17:28:41.763 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 17:28:41.764 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 17:28:42.686 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 17:28:42.688 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 17:28:42.690 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 17:28:42.692 +07:00[INF] Hosting environment: "Development"
][2023-09-26 17:28:42.693 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 17:28:42.708 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 17:28:45.561 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 17:28:46.692 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 1135.5863ms
][2023-09-26 17:28:46.704 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 17:28:46.712 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 7.5791ms
][2023-09-26 17:28:46.775 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 17:28:46.804 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 29.2495ms
][2023-09-26 17:28:46.952 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 17:28:47.120 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 167.8594ms
][2023-09-26 17:28:47.790 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:28:49.925 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:28:51.619 +07:00[INF] Executed DbCommand ("195"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:28:51.619 +07:00[INF] Executed DbCommand ("195"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:28:54.480 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:28:54.529 +07:00[INF] Executed DbCommand ("45"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:28:59.433 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:28:59.495 +07:00[INF] Executed DbCommand ("59"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:29:04.425 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:29:04.473 +07:00[INF] Executed DbCommand ("45"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:29:09.436 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:29:09.482 +07:00[INF] Executed DbCommand ("42"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:29:14.432 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:29:14.495 +07:00[INF] Executed DbCommand ("61"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:29:19.435 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:29:19.560 +07:00[INF] Executed DbCommand ("122"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:29:24.428 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:29:24.514 +07:00[INF] Executed DbCommand ("83"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:29:28.329 +07:00[INF] Request starting HTTP/2 POST https://localhost:7080/api/v1/Create-Order application/json 243
][2023-09-26 17:29:29.234 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)"'
][2023-09-26 17:29:29.276 +07:00[INF] Route matched with "{action = \"CreateOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult CreateOrder(FinalApi.Dto.CreateOrderRequest)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 17:29:29.407 +07:00[INF] Executing "OkObjectResult", writing value of type '"FinalApi.Dto.CreateOrderRequest"'.
][2023-09-26 17:29:29.429 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:29:29.434 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)" in 145.8215ms
][2023-09-26 17:29:29.436 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)"'
][2023-09-26 17:29:29.442 +07:00[INF] Request finished HTTP/2 POST https://localhost:7080/api/v1/Create-Order application/json 243 - 200 - application/json;+charset=utf-8 1113.6135ms
][2023-09-26 17:29:29.483 +07:00[INF] Executed DbCommand ("52"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:29:34.442 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:29:34.487 +07:00[INF] Executed DbCommand ("41"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:29:39.430 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:29:39.482 +07:00[INF] Executed DbCommand ("47"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:29:42.875 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 17:29:42.879 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 17:29:42.880 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 17:29:42.889 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:29:42.979 +07:00[INF] Executed DbCommand ("28"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 17:29:42.990 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 17:29:43.000 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 119.422ms
][2023-09-26 17:29:43.000 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 17:29:43.004 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 128.6493ms
][2023-09-26 17:29:44.431 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:29:44.478 +07:00[INF] Executed DbCommand ("43"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:29:49.437 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:29:49.496 +07:00[INF] Executed DbCommand ("54"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:29:54.439 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:29:54.490 +07:00[INF] Executed DbCommand ("48"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:29:59.439 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:29:59.501 +07:00[INF] Executed DbCommand ("58"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:30:04.428 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:30:04.471 +07:00[INF] Executed DbCommand ("40"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:30:04.798 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 17:30:04.801 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 17:30:04.801 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 17:30:04.805 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:30:04.821 +07:00[INF] Executed DbCommand ("11"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 17:30:04.822 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 17:30:04.822 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 20.5406ms
][2023-09-26 17:30:04.822 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 17:30:04.822 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 23.8264ms
][2023-09-26 17:30:09.448 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:30:09.512 +07:00[INF] Executed DbCommand ("59"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:30:14.432 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:30:14.495 +07:00[INF] Executed DbCommand ("57"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:30:19.429 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:30:19.494 +07:00[INF] Executed DbCommand ("62"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:30:24.430 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:30:24.470 +07:00[INF] Executed DbCommand ("37"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:30:29.428 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:30:29.481 +07:00[INF] Executed DbCommand ("49"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:30:34.433 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:30:34.494 +07:00[INF] Executed DbCommand ("58"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:30:39.426 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:30:39.466 +07:00[INF] Executed DbCommand ("37"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:30:44.431 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:30:44.486 +07:00[INF] Executed DbCommand ("52"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:30:48.175 +07:00[INF] Request starting HTTP/2 POST https://localhost:7080/api/v1/Create-Order application/json 254
][2023-09-26 17:30:48.176 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)"'
][2023-09-26 17:30:48.176 +07:00[INF] Route matched with "{action = \"CreateOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult CreateOrder(FinalApi.Dto.CreateOrderRequest)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 17:30:48.176 +07:00[INF] Executing "OkObjectResult", writing value of type '"FinalApi.Dto.CreateOrderRequest"'.
][2023-09-26 17:30:48.176 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)" in 0.8251ms
][2023-09-26 17:30:48.177 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)"'
][2023-09-26 17:30:48.177 +07:00[INF] Request finished HTTP/2 POST https://localhost:7080/api/v1/Create-Order application/json 254 - 200 - application/json;+charset=utf-8 1.3276ms
][2023-09-26 17:30:49.439 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:30:49.493 +07:00[INF] Executed DbCommand ("50"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:30:54.172 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 17:30:54.172 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 17:30:54.172 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 17:30:54.175 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:30:54.186 +07:00[INF] Executed DbCommand ("8"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 17:30:54.186 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 17:30:54.187 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 14.5371ms
][2023-09-26 17:30:54.187 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 17:30:54.187 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 15.3446ms
][2023-09-26 17:30:54.434 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:30:54.491 +07:00[INF] Executed DbCommand ("53"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:30:59.441 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:30:59.481 +07:00[INF] Executed DbCommand ("37"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:31:04.437 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:31:04.497 +07:00[INF] Executed DbCommand ("57"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:31:09.434 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:31:09.473 +07:00[INF] Executed DbCommand ("37"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:31:14.427 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:31:14.482 +07:00[INF] Executed DbCommand ("51"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:31:19.442 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:31:19.497 +07:00[INF] Executed DbCommand ("52"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:31:53.678 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 17:31:53.884 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 17:31:53.887 +07:00[INF] Quartz Scheduler created
][2023-09-26 17:31:53.892 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 17:31:53.894 +07:00[INF] RAMJobStore initialized.
][2023-09-26 17:31:53.896 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 17:31:53.898 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 17:31:53.900 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 17:31:54.267 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 17:31:54.268 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 17:31:54.270 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 17:31:54.271 +07:00[INF] Hosting environment: "Development"
][2023-09-26 17:31:54.273 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 17:31:54.283 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 17:31:56.129 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 17:31:56.355 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:31:58.078 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:31:58.213 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 2088.1304ms
][2023-09-26 17:31:58.228 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 17:31:58.237 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 9.0959ms
][2023-09-26 17:31:58.349 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 17:31:58.387 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 38.6876ms
][2023-09-26 17:31:58.572 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 17:31:58.784 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 211.4715ms
][2023-09-26 17:32:00.060 +07:00[INF] Executed DbCommand ("512"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:32:00.060 +07:00[INF] Executed DbCommand ("512"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:32:03.089 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:32:03.162 +07:00[INF] Executed DbCommand ("65"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:32:08.058 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:32:08.116 +07:00[INF] Executed DbCommand ("55"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:33:58.630 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 17:33:58.976 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 17:33:58.978 +07:00[INF] Quartz Scheduler created
][2023-09-26 17:33:58.980 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 17:33:58.983 +07:00[INF] RAMJobStore initialized.
][2023-09-26 17:33:58.986 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 17:33:58.988 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 17:33:58.990 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 17:33:59.465 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 17:33:59.468 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 17:33:59.470 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 17:33:59.471 +07:00[INF] Hosting environment: "Development"
][2023-09-26 17:33:59.472 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 17:33:59.482 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 17:34:00.867 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 17:34:01.271 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 407.8055ms
][2023-09-26 17:34:01.299 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 17:34:01.305 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 6.1315ms
][2023-09-26 17:34:01.687 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 17:34:01.752 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 64.5185ms
][2023-09-26 17:34:01.942 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 17:34:02.136 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 193.2594ms
][2023-09-26 17:34:05.911 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:34:09.420 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:34:09.809 +07:00[INF] Executed DbCommand ("316"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:34:09.809 +07:00[INF] Executed DbCommand ("2,210"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:34:14.451 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:34:14.496 +07:00[INF] Executed DbCommand ("39"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:34:19.444 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:34:19.491 +07:00[INF] Executed DbCommand ("43"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:34:24.399 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:34:24.437 +07:00[INF] Executed DbCommand ("36"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:34:29.387 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:34:29.434 +07:00[INF] Executed DbCommand ("44"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:34:34.390 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:34:34.454 +07:00[INF] Executed DbCommand ("60"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:34:39.407 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:34:39.455 +07:00[INF] Executed DbCommand ("44"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:34:44.397 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:34:44.428 +07:00[INF] Executed DbCommand ("29"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:34:49.405 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:34:49.468 +07:00[INF] Executed DbCommand ("61"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:34:54.405 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:34:54.450 +07:00[INF] Executed DbCommand ("42"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:34:59.391 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:34:59.463 +07:00[INF] Executed DbCommand ("70"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:35:04.390 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:35:04.460 +07:00[INF] Executed DbCommand ("68"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:35:09.397 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:35:09.458 +07:00[INF] Executed DbCommand ("58"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:35:14.392 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:35:14.449 +07:00[INF] Executed DbCommand ("55"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:35:19.398 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:35:19.450 +07:00[INF] Executed DbCommand ("48"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:35:24.391 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:35:24.727 +07:00[INF] Executed DbCommand ("333"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:35:27.795 +07:00[INF] Request starting HTTP/2 POST https://localhost:7080/api/v1/Create-Order application/json 242
][2023-09-26 17:35:27.971 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)"'
][2023-09-26 17:35:28.016 +07:00[INF] Route matched with "{action = \"CreateOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult CreateOrder(FinalApi.Dto.CreateOrderRequest)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 17:35:28.147 +07:00[INF] Executing "OkObjectResult", writing value of type '"FinalApi.Dto.CreateOrderRequest"'.
][2023-09-26 17:35:28.179 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)" in 152.5241ms
][2023-09-26 17:35:28.182 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)"'
][2023-09-26 17:35:28.191 +07:00[INF] Request finished HTTP/2 POST https://localhost:7080/api/v1/Create-Order application/json 242 - 200 - application/json;+charset=utf-8 397.1183ms
][2023-09-26 17:35:29.392 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:35:29.444 +07:00[INF] Executed DbCommand ("48"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:35:34.401 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:35:34.750 +07:00[INF] Executed DbCommand ("345"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:35:38.861 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 17:35:38.864 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 17:35:38.866 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 17:35:38.880 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:35:39.013 +07:00[INF] Executed DbCommand ("21"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 17:35:39.032 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 17:35:39.041 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 174.7266ms
][2023-09-26 17:35:39.041 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 17:35:39.047 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 186.1694ms
][2023-09-26 17:35:39.397 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:35:39.438 +07:00[INF] Executed DbCommand ("37"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:35:44.395 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:35:44.431 +07:00[INF] Executed DbCommand ("33"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 17:35:49.399 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 17:35:49.442 +07:00[INF] Executed DbCommand ("40"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:52:11.556 +07:00[INF] User profile is available. Using '"C:\\Users\\lenovo\\AppData\\Local\\ASP.NET\\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-09-26 20:52:11.841 +07:00[INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
][2023-09-26 20:52:11.846 +07:00[INF] Quartz Scheduler created
][2023-09-26 20:52:11.848 +07:00[INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
][2023-09-26 20:52:11.850 +07:00[INF] RAMJobStore initialized.
][2023-09-26 20:52:11.851 +07:00[INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
][2023-09-26 20:52:11.853 +07:00[INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
][2023-09-26 20:52:11.854 +07:00[INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
][2023-09-26 20:52:14.267 +07:00[INF] Now listening on: "https://localhost:7080"
][2023-09-26 20:52:14.269 +07:00[INF] Now listening on: "http://localhost:5197"
][2023-09-26 20:52:14.271 +07:00[INF] Application started. Press Ctrl+C to shut down.
][2023-09-26 20:52:14.276 +07:00[INF] Hosting environment: "Development"
][2023-09-26 20:52:14.277 +07:00[INF] Content root path: "D:\\SWP-Project\\FinalApi\\"
][2023-09-26 20:52:14.286 +07:00[INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
][2023-09-26 20:52:18.935 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/index.html - -
][2023-09-26 20:52:20.290 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/index.html - - - 200 - text/html;charset=utf-8 1359.2008ms
][2023-09-26 20:52:20.320 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - -
][2023-09-26 20:52:20.333 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_framework/aspnetcore-browser-refresh.js - - - 200 12348 application/javascript;+charset=utf-8 13.0635ms
][2023-09-26 20:52:20.400 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/_vs/browserLink - -
][2023-09-26 20:52:20.488 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 88.1746ms
][2023-09-26 20:52:20.697 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - -
][2023-09-26 20:52:23.156 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 2459.3090ms
][2023-09-26 20:52:23.466 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:52:23.466 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:52:26.706 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:52:27.394 +07:00[INF] Executed DbCommand ("493"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:52:27.394 +07:00[INF] Executed DbCommand ("493"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:52:27.394 +07:00[INF] Executed DbCommand ("492"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:52:31.657 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:52:31.772 +07:00[INF] Executed DbCommand ("110"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:52:36.661 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:52:36.750 +07:00[INF] Executed DbCommand ("85"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:52:41.654 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:52:41.734 +07:00[INF] Executed DbCommand ("77"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:52:46.761 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:52:46.856 +07:00[INF] Executed DbCommand ("92"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:52:51.662 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:52:51.762 +07:00[INF] Executed DbCommand ("96"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:52:56.653 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:52:56.736 +07:00[INF] Executed DbCommand ("80"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:53:01.647 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:53:01.736 +07:00[INF] Executed DbCommand ("87"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:53:06.272 +07:00[INF] Request starting HTTP/2 POST https://localhost:7080/api/v1/Create-Order application/json 255
][2023-09-26 20:53:06.660 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:53:06.923 +07:00[INF] Executed DbCommand ("259"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:53:07.630 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)"'
][2023-09-26 20:53:07.651 +07:00[INF] Route matched with "{action = \"CreateOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult CreateOrder(FinalApi.Dto.CreateOrderRequest)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 20:53:07.754 +07:00[INF] Executing "BadRequestObjectResult", writing value of type '"Microsoft.AspNetCore.Mvc.ValidationProblemDetails"'.
][2023-09-26 20:53:07.770 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)" in 111.4057ms
][2023-09-26 20:53:07.774 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)"'
][2023-09-26 20:53:07.780 +07:00[INF] Request finished HTTP/2 POST https://localhost:7080/api/v1/Create-Order application/json 255 - 400 - application/problem+json;+charset=utf-8 1507.7937ms
][2023-09-26 20:53:11.652 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:53:11.732 +07:00[INF] Executed DbCommand ("77"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:53:16.653 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:53:16.763 +07:00[INF] Executed DbCommand ("106"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:53:21.648 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:53:21.730 +07:00[INF] Executed DbCommand ("79"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:53:21.772 +07:00[INF] Request starting HTTP/2 POST https://localhost:7080/api/v1/Create-Order application/json 253
][2023-09-26 20:53:21.774 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)"'
][2023-09-26 20:53:21.775 +07:00[INF] Route matched with "{action = \"CreateOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult CreateOrder(FinalApi.Dto.CreateOrderRequest)" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 20:53:21.790 +07:00[INF] Executing "OkObjectResult", writing value of type '"FinalApi.Dto.CreateOrderRequest"'.
][2023-09-26 20:53:21.800 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)" in 24.6082ms
][2023-09-26 20:53:21.800 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.CreateOrder (FinalApi)"'
][2023-09-26 20:53:21.800 +07:00[INF] Request finished HTTP/2 POST https://localhost:7080/api/v1/Create-Order application/json 253 - 200 - application/json;+charset=utf-8 27.6374ms
][2023-09-26 20:53:26.651 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:53:26.734 +07:00[INF] Executed DbCommand ("80"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:53:31.647 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:53:31.729 +07:00[INF] Executed DbCommand ("78"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:53:32.582 +07:00[INF] Request starting HTTP/2 GET https://localhost:7080/api/v1/GetOrders - -
][2023-09-26 20:53:32.585 +07:00[INF] Executing endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 20:53:32.586 +07:00[INF] Route matched with "{action = \"GetOrder\", controller = \"Orders\"}". Executing controller action with signature "Microsoft.AspNetCore.Mvc.IActionResult GetOrder()" on controller "FinalApi.Controllers.V1.OrdersController" ("FinalApi").
][2023-09-26 20:53:32.595 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:53:32.706 +07:00[INF] Executed DbCommand ("36"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [o0].[order_id] AS [OrderId], [s].[shopName] AS [ShopName], [o].[overDueDate] AS [OverDueDate], [o].[status] AS [Status], COALESCE(SUM([o0].[quantity]), 0) AS [Quantity], COALESCE(SUM(CAST([o0].[quantity] AS float) * [i].[itemPrice]), 0.0E0) AS [TotalPrice]\r\nFROM [orders] AS [o]\r\nINNER JOIN [orderdetails] AS [o0] ON [o].[order_id] = [o0].[order_id]\r\nINNER JOIN [itemdetails] AS [i] ON [o0].[itemDetailId] = [i].[itemDetailId]\r\nINNER JOIN [shop] AS [s] ON [i].[shop_id] = [s].[shop_id]\r\nGROUP BY [o0].[order_id], [s].[shopName], [o].[overDueDate], [o].[status]"
][2023-09-26 20:53:32.715 +07:00[INF] Executing "OkObjectResult", writing value of type '"System.Collections.Generic.List`1[[FinalApi.Dto.GetOrderRequest, FinalApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
][2023-09-26 20:53:32.723 +07:00[INF] Executed action "FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)" in 136.8476ms
][2023-09-26 20:53:32.723 +07:00[INF] Executed endpoint '"FinalApi.Controllers.V1.OrdersController.GetOrder (FinalApi)"'
][2023-09-26 20:53:32.726 +07:00[INF] Request finished HTTP/2 GET https://localhost:7080/api/v1/GetOrders - - - 200 - application/json;+charset=utf-8 144.4507ms
][2023-09-26 20:53:36.652 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:53:36.737 +07:00[INF] Executed DbCommand ("80"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
][2023-09-26 20:53:41.646 +07:00[INF] Entity Framework Core "6.0.18" initialized '"projectDemoContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer":"6.0.18"' with options: "None"
][2023-09-26 20:53:41.717 +07:00[INF] Executed DbCommand ("69"ms) [Parameters=[""], CommandType='"Text"', CommandTimeout='30']"\r\n""SELECT [c].[customer_id], [c].[accessFailedCount], [c].[customerName], [c].[customerType], [c].[email], [c].[lockOutEnable], [c].[lockOutEnd], [c].[passwords], [c].[PhoneNumber]\r\nFROM [customers] AS [c]\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM [orders] AS [o]\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM [orderdetails] AS [o0]\r\n        WHERE [o0].[order_id] = [o].[order_id])\r\n    GROUP BY [o].[customer_id]\r\n    HAVING (((\r\n        SELECT COALESCE(SUM([o1].[totalPrice]), 0.0E0)\r\n        FROM [orders] AS [o1]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o2]\r\n            WHERE [o2].[order_id] = [o1].[order_id]) AND (([o].[customer_id] = [o1].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o1].[customer_id] IS NULL)))) > 4.0E0) OR ((\r\n        SELECT DISTINCT COUNT(DISTINCT ([o5].[itemDetailId]))\r\n        FROM [orders] AS [o4]\r\n        INNER JOIN [orderdetails] AS [o5] ON [o4].[order_id] = [o5].[order_id]\r\n        WHERE EXISTS (\r\n            SELECT 1\r\n            FROM [orderdetails] AS [o6]\r\n            WHERE [o6].[order_id] = [o4].[order_id]) AND (([o].[customer_id] = [o4].[customer_id]) OR (([o].[customer_id] IS NULL) AND ([o4].[customer_id] IS NULL)))) > 2)) AND ([o].[customer_id] = [c].[customer_id]))"
]